{"meta":{"title":"AppleDog's Note","subtitle":"菜蟲從零開始的學習筆記","description":null,"author":"AppleDog","url":"http://appleDog0113.github.io","root":"/"},"pages":[{"title":"About","date":"2024-05-30T10:20:13.000Z","updated":"2024-05-31T01:02:02.709Z","comments":true,"path":"about/index.html","permalink":"http://appledog0113.github.io/about/index.html","excerpt":"","text":""},{"title":"categories","date":"2024-05-30T10:20:34.000Z","updated":"2024-05-31T01:02:02.709Z","comments":true,"path":"categories/index.html","permalink":"http://appledog0113.github.io/categories/index.html","excerpt":"","text":""},{"title":"tags","date":"2024-05-30T10:21:14.000Z","updated":"2024-05-31T01:02:02.709Z","comments":true,"path":"tags/index.html","permalink":"http://appledog0113.github.io/tags/index.html","excerpt":"","text":""}],"posts":[{"title":"Java-簡介-05","slug":"java-05","date":"2024-06-21T06:55:45.000Z","updated":"2024-06-21T08:27:50.654Z","comments":true,"path":"2024/06/21/java-05/","permalink":"http://appledog0113.github.io/2024/06/21/java-05/","excerpt":"","text":"分割檔案與package簡介分割檔案 將兩個類別個別存檔，放在同一資料夾下 個別編譯後執行主程式，可以直接執行並存取另一個類別檔內容 package package類別庫，即category這類的功能 不同package內可以擁有名稱相同的類別 存放主程式的資料夾必須跟package的名稱相同 原始檔中如果沒有指明package，則被視為沒有名稱的package 格式：package packageName; 使用範例： CBox.java123456789101112131415161718192021222324package pack1;class CBox&#123; private int length; private int width; private int height; public CBox(int l,int w, int h) &#123; length=l; width=w; height=h; &#125; public void show() &#123; System.out.print(&quot;L=&quot;+length+&quot;, W=&quot;+width); System.out.println(&quot;, H=&quot;+height); System.out.println(&quot;Volume=&quot;+vol()); &#125; public int vol() &#123; return length*width*height; &#125;&#125; hw12_1.java123456789package pack1;public class hw12_1&#123; public static void main(String args[]) &#123; CBox box=new CBox(3,5,7); box.show(); &#125;&#125; 將兩個檔案編譯後執行hw12_1.java檔 OutputL&#x3D;3, W&#x3D;5, H&#x3D;7Volume&#x3D;105 存取不同package的類別 &amp; import回去再寫","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"職訓/Java","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Java/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/categories/Java/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/tags/Java/"}]},{"title":"Java-簡介-04","slug":"java-04","date":"2024-06-21T00:40:12.000Z","updated":"2024-06-21T07:05:10.618Z","comments":true,"path":"2024/06/21/java-04/","permalink":"http://appledog0113.github.io/2024/06/21/java-04/","excerpt":"","text":"抽象類別抽象類別介紹 目的是讓使用者依據格式建立新的類別 關鍵字：abstract 抽象函數裡只有定義名稱，沒有定義處理方式 hw11_112345678910111213abstract class CShape&#123; protected int width; protected int height; public void show() &#123; System.out.println(&quot;width=&quot;+width); System.out.println(&quot;height=&quot;+height); System.out.println(&quot;area=&quot;+area()); &#125; public abstract int area(); // 計算面積 &#125; 用abstract宣告抽象類別與抽象函數建立父類別CShape 其中沒有用到abstract修飾的就是實例，繼承後可以直接使用被宣告abstract則需要被改寫才能使用 hw11_112345678910111213141516171819202122232425262728293031323334353637abstract class CShape&#123; protected int width; protected int height; public void show() &#123; System.out.println(&quot;width=&quot;+width); System.out.println(&quot;height=&quot;+height); System.out.println(&quot;area=&quot;+area()); &#125; public abstract int area(); // 計算面積 &#125;class CWin extends CShape&#123; CWin(int w, int h)&#123; width = w; height = h; &#125; public int area()&#123; return width*height; &#125;&#125;public class hw11_1&#123; public static void main(String args[]) &#123; CWin win=new CWin(5,7); // 建立CWin類別的物件 win.show(); &#125;&#125; Outputwidth: 5height: 7area: 35 建立子類別CWin繼承CShape建立兩個變數的建構元 123public int area()&#123; return width*height;&#125; 複寫原本的抽象類別才能做使用 12345678public class hw11_1&#123; public static void main(String args[]) &#123; CWin win=new CWin(5,7); // 建立CWin類別的物件 win.show(); &#125;&#125; 在main()裡呼叫子類別CWin使用父類別函數win.show()並使用在子類別被複寫過的show() 介面 interface 介面的資料成員必須初始化 介面的函數必須全部定義成abstract class可以用implements（實作）介面 12345interface 介面名稱&#123; final 資料型態 成員名稱 =&gt;常數 // 成員必須設定初值 修飾子 abstract 傳回值型態 函數名稱(...); //abstract 不會定義處理方式&#125; interface裡可以省略final和abstract 因為是必填 1234567891011121314151617181920212223242526272829303132333435363738394041424344454647// hw11_9, 多重繼承的練習interface iShape&#123; public void show(); public int area(); &#125;interface iColor&#123; public void showColor();&#125;class CWin implements iShape,iColor&#123; int width, height; String color; public CWin(int w, int h, String c)&#123; width=w; height=h; color=c; &#125; public int area()&#123; return width*height; &#125; public void showColor()&#123; System.out.println(&quot;color: &quot;+color); &#125; public void show()&#123; System.out.println(&quot;width: &quot;+width); System.out.println(&quot;height: &quot;+height); System.out.println(&quot;area: &quot;+area()); showColor(); &#125; &#125;public class hw11_3&#123; public static void main(String args[]) &#123; CWin win=new CWin(5,7,&quot;Green&quot;); win.show(); &#125;&#125; Outputwidth: 5height: 7area: 35color: Green 由於interface的method通通都是abstract要使用的話就要全部複寫好麻煩喔怎麼這樣 class CWin implements iShape,iColor介面：implements 後面可以接很多interface繼承：expend 後面只能接一個class 介面的延伸與繼承 介面可以透過繼承來衍生出新介面 原來的介面稱為基底介面或父介面 衍生出的介面稱為衍生介面或子介面 一個介面可以繼承自多個介面（多重繼承） hw11_412345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455565758596061626364656667interface Data&#123; public void best(); // 判斷那一科成績較高 public void failed(); // 判斷那一科成績低於60分&#125;interface Test extends Data&#123; public void showData(); // 顯示學生的資料及平均成績 public double average(); // 計算數學和英文的平均成績&#125;class CStu implements Test&#123; protected String name; // 姓名 protected int math; // 數學成績 protected int english; // 英文成績 public CStu(String n, int m, int eng)&#123; name=n; math=m; english=eng; &#125; public void best()&#123; if (math&gt;english)&#123; System.out.println(name+&quot;的數學比較好&quot;); &#125;else&#123; System.out.println(name+&quot;的英文比較好&quot;); &#125; &#125; public void failed()&#123; if(math&lt;60 &amp;&amp; english&lt;60)&#123; System.out.println(name+&quot;的數學和英文都當掉了&quot;); &#125;else&#123; if (math&lt;60) System.out.println(name+&quot;的數學當掉了&quot;); if (english&lt;60) System.out.println(name+&quot;的英文當掉了&quot;); &#125; &#125; public double average()&#123; return (math+english)/2.0; &#125; public void showData()&#123; System.out.println(&quot;姓名: &quot;+name); System.out.println(&quot;數學成績: &quot;+math); System.out.println(&quot;英文成績: &quot;+english); &#125; public void show()&#123; showData(); System.out.println(&quot;平均成績: &quot;+average()); best(); failed(); &#125;&#125;public class hw11_4&#123; public static void main(String args[]) &#123; CStu stu=new CStu(&quot;Judy&quot;,58,91); stu.show(); &#125;&#125; instanceof 測試物件與某類別是否有繼承關係 物件是否為某類別或其子類別 回傳值：布林 格式：[obj] instanceof [class] 1234567891011121314151617181920212223242526272829303132333435class CCircle&#123;&#125;class CCoin extends CCircle&#123;&#125;public class hw11_5 extends CCoin&#123; public static void main(String args[])&#123; boolean status; CCoin coin=new CCoin(); CCircle cir=new CCircle(); hw11_5 obj=new hw11_5(); CCoin carr[]=new CCoin[5]; status=(cir instanceof CCoin); System.out.println(&quot;cir instanceof CCoin? &quot;+status); status=(obj instanceof CCircle); System.out.println(&quot;obj instanceof CCircle? &quot;+status); status=(coin instanceof hw11_5); System.out.println(&quot;coin instanceof hw11_5? &quot;+status); status=(coin instanceof CCoin); System.out.println(&quot;coin instanceof CCoin? &quot;+status); status=(coin instanceof CCircle); System.out.println(&quot;coin instanceof CCircle? &quot;+status); status=(carr instanceof Object); System.out.println(&quot;carr instanceof CCircle? &quot;+status); // status=(cir instanceof String); // System.out.println(&quot;coin instanceof CCircle? &quot;+status); &#125;&#125; Outputcir instanceof CCoin? falseobj instanceof CCircle? truecoin instanceof hw11_5? falsecoin instanceof CCoin? truecoin instanceof CCircle? truecarr instanceof CCircle? true","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"職訓/Java","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Java/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/categories/Java/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/tags/Java/"}]},{"title":"Laravel-後台管理系統與前台顯示 04","slug":"lavarel-04","date":"2024-06-19T00:25:22.000Z","updated":"2024-06-19T08:42:52.024Z","comments":true,"path":"2024/06/19/lavarel-04/","permalink":"http://appledog0113.github.io/2024/06/19/lavarel-04/","excerpt":"","text":"上半場 admin&#x2F;pro上傳圖片 app\\Http\\Controllers\\Admin\\AdminProductController.php123456789101112131415public function insert(Request $req)&#123; $photo = $req-&gt;photo; $times = explode(&quot; &quot;, microtime()); //將microtime分割成陣列 $fileName = $times[1].&quot;.&quot;.$photo-&gt;extension(); // extension()-&gt;副檔名 $photo-&gt;move(&quot;images/product&quot;, $fileName); // 在public資料夾下新增 $product = new Product(); $product-&gt;title = $req-&gt;title; $product-&gt;photo = $fileName; $product-&gt;save(); Session::flash(&quot;message&quot;,&quot;已新增&quot;); return redirect(&quot;/admin/product/list&quot;);&#125; 要先新增/public/image 資料夾，讓上傳的檔案可以統一放在公開資料夾裡（&#x2F;public下所有東西的權限都是公開的）前面microtime()是抓後面的毫秒數當圖檔的檔名可以console.log出microtime()觀察長什麼樣子 將資料夾命名的時間轉換成 YYMMDD 的魔法 12$times = explode(&quot; &quot;, microtime());$time = strftime(&quot;%Y%m%D%H%M%S&quot;, $times[1]); 通常不能只取到秒，至少要取到微秒，才不會有同時上傳檔案名稱相同的問題 取微秒中的前三碼 代表每秒可以同時上傳1000個檔案 1$time .= &quot;_&quot;.substr($times[0],2,3); substr();: 取字串 $time[0] : 例如 0.123456789substr($times[0],2 ,6): 從$time[0]取字串，2: 表示從第三個字開始（索引值從0開始），6: 表示取6個字 .= 表示左邊與右邊相接 修改已上傳內容 app\\Http\\Controllers\\Admin\\AdminProductController.php1234567891011121314151617181920212223242526public function edit(Request $req)&#123; $pro = Product::find($req-&gt;id); return view(&quot;admin.product.edit&quot;,compact(&quot;pro&quot;));&#125; public function update(Request $req)&#123; $photo = $req-&gt;photo; $pro = Product::find($req-&gt;id); if(!empty($photo))&#123; @unlink(&quot;images/product/&quot; . $pro-&gt;photo); $times = explode(&quot; &quot;, microtime()); $fileName = $times[1].&quot;.&quot;.$photo-&gt;extension(); $photo-&gt;move(&quot;images/product&quot;, $fileName); $pro-&gt;photo = $fileName; &#125; $pro-&gt;title = $req-&gt;title; $pro-&gt;update(); Session::flash(&quot;message&quot;, &quot;已修改&quot;); return redirect(&quot;/admin/product/list&quot;); &#125; 先載入圖片和db的內容 12$photo = $req-&gt;photo;$pro = Product::find($req-&gt;id); 然後下判斷式看photo是否有東西（是否修改圖片）非為空就先從路徑刪除原圖片，再新增 使用php語法從路徑刪除$pro->photo同名檔案1@unlink(&quot;images/product/&quot; . $pro-&gt;photo); 將photo和title分開判斷是為了只更新title時photo不用更新 更新photo時先把原本的圖片刪掉不然原本的圖片會依然存在不會被覆蓋，圖片檔會變超級多~ 修改view讓圖片更新可以顯示原本的圖片 resources\\views\\admin\\product\\edit.blade.php1234567&lt;label class=&quot;col-form-lable col-3 text-right&quot;&gt;產品圖片&lt;/label&gt;&lt;div class=&quot;col-9&quot;&gt; &lt;input type=&quot;file&quot; class=&quot;form-control&quot; name=&quot;photo&quot;&gt; @if (!empty($pro-&gt;photo)) &lt;div class=&quot;mt-3&quot;&gt;&lt;img src=&quot;/images/product/&#123;&#123; $pro-&gt;photo &#125;&#125;&quot; alt=&quot;&quot; width=&quot;150&quot;&gt;&lt;/div&gt; @endif&lt;/div&gt; &lt;form&gt; 要設定為可上傳檔案 enctype=&quot;multipart/form-data&quot; 上傳圖片尺寸設定 如果檔案無法上傳記得到php server去改upload filesize跟max post size重開php server 和 Laravel server就可以了記得要確認使用版本、啟動版本、修改的php.ini檔版本是否相同 刪除功能 app\\Http\\Controllers\\Admin\\AdminProductController.php12345678910111213141516public function delete(Request $req)&#123; $id = $req-&gt;id; if(!empty($id))&#123; foreach($id as $data)&#123; $pro = Product::find($data); if(!empty($pro-&gt;photo))&#123; @unlink(&quot;images/product/&quot; . $pro-&gt;photo); &#125; $pro-&gt;delete(); &#125; &#125; Session::flash(&quot;message&quot;, &quot;已刪除&quot;); return redirect(&quot;/admin/product/list&quot;);&#125; 用$id抓db內容主要是有圖片刪除的部分要從路徑刪除圖檔，使用@unlink() 分頁寫在Model裡本來是寫在Controller，現在改放到Model 寫法一12345 public function getProduct()&#123; $list = self::paginate(10); return $list; &#125; 寫法一 說明self: 指的是物件本身, 也就是product資料表paginate(10): 每10筆為一頁 寫法二123456public function getList()&#123; $list = DB::table(&quot;product&quot;)-&gt;paginate(10); return $list; &#125; 寫法二 說明從product資料表裡取資料，每10筆一頁其實跟上面的寫法一樣DB是Http/config/app.php裡預設的寫法，可以直接指向預先設定好的資料庫 處理前台總之先把Controller和Route連上pro.blode先基本繼承好 123456789101112131415161718192021222324252627282930@extends(&quot;front.layout&quot;)@section(&quot;content&quot;)&lt;h2 class=&quot;text-center title mb-5 mt-lg-5&quot;&gt;產品介紹&lt;/h2&gt;&lt;div class=&quot;col-xxl-10 col-lg-11 col-sm-11 col-xs-12 mx-auto&quot;&gt;&lt;div class=&quot;gw mb-lg-5&quot;&gt; &lt;div class=&quot;css-dropdown&quot;&gt; &lt;input type=&quot;checkbox&quot; id=&quot;drop&quot; hidden&gt; &lt;label for=&quot;drop&quot;&gt;&lt;/label&gt; &lt;div class=&quot;inner&quot;&gt; @if(!empty($list) &amp;&amp; sizeof($list)&gt;0) @php $cnt = 0; @endphp @foreach($list as $data) @php $cnt++; @endphp @if($cnt == 1) &lt;a href=&quot;#&quot; class=&quot;active&quot;&gt;產品&#123;&#123;$data-&gt;title&#125;&#125;&lt;/a&gt; @else &lt;a href=&quot;#&quot;&gt;產品&#123;&#123;$data-&gt;title&#125;&#125;&lt;/a&gt; @endif @endforeach @endif &lt;/div&gt;&lt;!--inner--&gt; &lt;/div&gt;&lt;!--css-dropdown--&gt;&lt;/div&gt;&lt;!--w-100--&gt;&lt;div class=&quot;gw img-size-50 text-center pb-5&quot;&gt; @if(!empty($data-&gt;photo)) &lt;img src=&quot;/images/product/&#123;&#123; $data-&gt;photo &#125;&#125;&quot; alt=&quot;&quot;&gt; @endif&lt;/div&gt;&lt;!--img-wrap--&gt;&lt;/div&gt;&lt;!--col--&gt;@endsection","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Lavarel","slug":"職訓/Lavarel","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Lavarel/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/categories/Lavarel/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/tags/Lavarel/"}]},{"title":"bootstrap-切版-04","slug":"bootstrap-04","date":"2024-06-18T00:45:30.000Z","updated":"2024-06-19T05:26:40.157Z","comments":true,"path":"2024/06/18/bootstrap-04/","permalink":"http://appledog0113.github.io/2024/06/18/bootstrap-04/","excerpt":"","text":"RWD練習 See the Pen 240618-RWD-colum by appleDog (@appleDog-the-encoder) on CodePen. Json格式12345678910[ &#123; &quot;屬性&quot;: &quot;值&quot;, &quot;attr&quot;: &quot;val&quot; &#125;, &#123; &quot;attr&quot;: &quot;val&quot;, &quot;attr&quot;: &quot;val&quot; &#125;] 如何串接: ajax","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Bootstrap","slug":"職訓/Bootstrap","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Bootstrap/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/categories/Bootstrap/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/tags/Bootstrap/"}]},{"title":"Java-簡介-03","slug":"java-03","date":"2024-06-14T00:37:50.000Z","updated":"2024-06-17T05:17:22.982Z","comments":true,"path":"2024/06/14/java-03/","permalink":"http://appledog0113.github.io/2024/06/14/java-03/","excerpt":"","text":"巢狀類別在類別A裡再定義一個類別B 外部類別A 裡的 內部類別B static 要用 static 才能互相呼叫 匿名內部類別不設定物件直接呼叫內部類別，並存取內部類別或設定函數 123456789101112131415161718192021public class hw9_5&#123; static class CData&#123; // 設定hw9_5的內部類別 int a; int b; &#125; public static void main(String args[])&#123; ( new CData()&#123; void sub(int x,int y) &#123; a=x; b=y; System.out.println(a+&quot;*&quot;+b+&quot;=&quot;+(a*b)); &#125; &#125; ).sub(6,8); // 建立好新匿名內部類別後直接呼叫 &#125;&#125; Output6*8&#x3D;48 回收記憶體 稱為「垃圾回收機制」(garbage collection) 將指向該物件的變數值設為null即可:cir1=null; 若兩個變數指向同個物件 如果把其中一個變數設為null，因為另一個變數還是指向該記憶體，所以不會回收 類別繼承 extends &#x3D; 延伸 根據既有類別延伸出另一個類別 每一個類別只能有一個父類別（單一繼承） Java的介面可以實現多重繼承（多重繼承） 繼承的功能多半是簡化複製貼上的重複流程子類別會繼承父類別的某些成員和函式，可以直接使用，不用重寫 呼叫建構元 super(); 呼叫建構元的關鍵字 呼叫父類別的super()時，必須要寫在子類別第一行 不能和this()同時使用 可以多載 若沒有設定引數，預設提供沒有引數的建構元 hw10_1_繼承的練習12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849505152535455class Caaa&#123; public int x; public int y; public Caaa()&#123; x=5; y=5; &#125; public Caaa(int a, int b)&#123; x=a; y=b; &#125; public void sub() &#123; System.out.println(x+&quot;*&quot;+y+&quot;=&quot;+x*y); &#125;&#125;class Cbbb extends Caaa&#123; public Cbbb()&#123; &#125; public Cbbb(int a, int b)&#123; super(a,b); &#125; void set_num(int a, int b)&#123; System.out.println(&quot;將x,y 重新設定&quot;); x=a; y=b; &#125; void show()&#123; System.out.println(&quot;x = &quot;+x+&quot;, y = &quot;+y); &#125;&#125;public class hw10_1&#123; public static void main(String args[]) &#123; Cbbb bb=new Cbbb(); bb.show(); bb.sub(); bb.set_num(5,10); bb.show(); bb.sub(); &#125;&#125; Outputex &#x3D; 5, y &#x3D; 555&#x3D;25將x,y 重新設定x &#x3D; 5, y &#x3D; 10510&#x3D;50 說明 設定類別 class Caaa 12345678910111213141516171819class Caaa&#123;public int x;public int y; public Caaa()&#123; x=5; y=5;&#125;public Caaa(int a, int b)&#123; x=a; y=b;&#125;public void sub()&#123; System.out.println(x+&quot;*&quot;+y+&quot;=&quot;+x*y);&#125;&#125; 裡面包含無引數的建構子：x=5，y=5 和有引數的建構子：x=a，y=b 以及method sub() 設定繼承Caaa的類別 class Cbbb 123456789101112131415161718192021class Cbbb extends Caaa&#123;public Cbbb()&#123;&#125;public Cbbb(int a, int b)&#123; super(a,b);&#125;void set_num(int a, int b)&#123; System.out.println(&quot;將x,y 重新設定&quot;); x=a; y=b;&#125;void show()&#123; System.out.println(&quot;x = &quot;+x+&quot;, y = &quot;+y); &#125;&#125; 若有設定建構元，就沒有Java的預設建構元了，需要自己建一個空白的無引數建構元 類別繼承若沒有特別設定super()引數, 默認自動套用父類別的無引數建構元 所以在Cbbb(int a, int b)這種有引數的建構元裡需要呼叫super(a,b)以設定要呼叫的父類別有引數建構元 Cbbb直接使用Caaa的int x, int y成員，沒有另外設定 sub()也是延用父類別的method 改寫與多載hw10_2_範例12345678910111213141516171819202122232425262728293031323334353637383940414243444546474849class Car&#123; public String color; public Car() &#123; &#125; public Car(String str) &#123; color=str; &#125; public void show() &#123; System.out.println(&quot;車身顏色:&quot;+color); &#125;&#125;class Truck extends Car&#123; String owner=&quot;Tom&quot;; String id=&quot;123&quot;; public Truck(String str)&#123; super(str); &#125; public Truck(String s1, String s2, String s3)&#123; color=s1; id=s2; owner=s3; &#125; public void show()&#123; System.out.println(&quot;車主姓名\\t&quot;+&quot;車牌號碼\\t&quot;+&quot;車身顏色\\t&quot;); System.out.println(owner+&quot;\\t\\t&quot;+id+&quot;\\t\\t&quot;+color); &#125;&#125;public class hw10_2&#123; public static void main(String args[])&#123; Car t0=new Truck(&quot;Blue&quot;); t0.show(); Car t1=new Truck(&quot;Blue&quot;,&quot;C2-5678&quot;,&quot;Ariel&quot;); t1.show(); &#125;&#125; Out put車主姓名 車牌號碼 車身顏色Tom 123 Blue車主姓名 車牌號碼 車身顏色Ariel C2-5678 Blue","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"職訓/Java","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Java/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/categories/Java/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/tags/Java/"}]},{"title":"Lavaral-後台管理系統與前台顯示 03","slug":"lavaral-03","date":"2024-06-12T00:54:04.000Z","updated":"2024-06-19T05:24:17.041Z","comments":true,"path":"2024/06/12/lavaral-03/","permalink":"http://appledog0113.github.io/2024/06/12/lavaral-03/","excerpt":"","text":"上半場QA 功能製作 新建前台Controller Terminal輸入1php artisan make:control front/QaController 新建後台Controller Terminal輸入1php artisan make:control Admin/AdminQaController 至AdminQaController新增方法 新增QA資料1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859class AdminQaController extends Controller&#123; public function list()&#123; $list = Qa::get(); return view(&quot;admin.qa.list&quot;, compact(&quot;list&quot;)); &#125; public function add()&#123; return view(&quot;admin.qa.add&quot;); &#125; public function insert(Request $req)&#123; $answer = $req-&gt;answer; if(!empty($answer))&#123; // str_replace:取代字串 // 將輸入框的換行轉換為網頁的換行 $answer = str_replace(&quot;\\n&quot;,&quot;&lt;br/&gt;&quot;,$answer); &#125; $qa = new Qa(); $qa-&gt;question = $req-&gt;question; $qa-&gt;content = $answer; $qa-&gt;save(); Session::flash(&quot;message&quot;, &quot;已新增&quot;); return redirect(&quot;/admin/qa/list&quot;); &#125; public function edit(Request $req)&#123; $qa = Qa::find($req-&gt;id); return view(&quot;admin.qa.edit&quot;,compact(&quot;qa&quot;)); &#125; public function update(Request $req)&#123; $content = $req-&gt;content; if(!empty($content))&#123; // str_replace:取代字串 // 將輸入框的換行轉換為網頁的換行 $content = str_replace(&quot;\\n&quot;,&quot;&lt;br/&gt;&quot;, $content); &#125; $qa = Qa::find($req-&gt;id); $qa-&gt;question = $req-&gt;question; $qa-&gt;content = $content; $qa-&gt;update(); Session::flash(&quot;message&quot;, &quot;已修改&quot;); return redirect(&quot;/admin/qa/list&quot;); &#125; public function delete(Request $req)&#123; (new Qa())-&gt;deleteQa($req-&gt;id); Session::flash(&quot;message&quot;, &quot;已刪除&quot;); return redirect(&quot;/admin/qa/list&quot;); &#125;&#125; 新建 admin&#x2F;qa 資料夾 新增 add.blade, edit.blade, list.blade 三個php檔案 將notice&#x2F;list.blade 內容複製貼上到qa&#x2F;list.blade 修改其中內容 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354@extends(&quot;admin.app&quot;)@section(&quot;title&quot;,&quot;Q&amp;A&quot;) // 改標題@section(&quot;content&quot;)&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-12&quot;&gt; &lt;div class=&quot;card&quot;&gt; &lt;div class=&quot;card-header&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-1&quot;&gt; &lt;a href=&quot;add&quot; class=&quot;btn btn-primary&quot;&gt;新增&lt;/a&gt; &lt;/div&gt; &lt;div class=&quot;col-1&quot;&gt; &lt;a href=&quot;javascript:doDelete(&#x27;list&#x27;)&quot; class=&quot;btn btn-danger&quot;&gt;刪除&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;form id=&quot;list&quot; name=&quot;list&quot; method=&quot;post&quot; action=&quot;/admin/qa/delete&quot;&gt; // 改方法 &#123;&#123; csrf_field() &#125;&#125; &lt;table class=&quot;table table-border border&quot;&gt; &lt;thead&gt; &lt;tr class=&quot;table table-warning&quot;&gt; &lt;th class=&quot;col-1 text-center align-top&quot;&gt; &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;all&quot;&gt; &lt;/th&gt; &lt;th class=&quot;col-5 text-center&quot;&gt;問題&lt;/th&gt; // 改checkBox內容 &lt;th class=&quot;col-4 text-center&quot;&gt;回答&lt;/th&gt; &lt;th class=&quot;col-2 text-center&quot;&gt;修改&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; @foreach($list as $data) &lt;tr&gt; &lt;td class=&quot;col-1 text-center&quot;&gt; &lt;input type=&quot;checkbox&quot; name=&quot;id[]&quot; class=&quot;form-check-input chk&quot; value=&quot;&#123;&#123; $data-&gt;id &#125;&#125;&quot;&gt; &lt;/td&gt; &lt;td class=&quot;col-5 text-left&quot;&gt;&#123;&#123; $data-&gt;question &#125;&#125;&lt;/td&gt; &lt;td class=&quot;col-4 text-left&quot;&gt;&#123;!! $data-&gt;content !!&#125;&lt;/td&gt; // 修改抓取方式 &lt;td class=&quot;col-2 text-center&quot;&gt; &lt;a href=&quot;edit/&#123;&#123; $data -&gt; id &#125;&#125;&quot; class=&quot;btn btn-success text-white&quot;&gt;修改&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; @endforeach &lt;/tbody&gt; &lt;/table&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;@endsection 將notice&#x2F;add.blade 內容複製貼上到qa&#x2F;add.blade 修改其中內容 12345678910111213141516171819202122232425262728293031@extends(&quot;admin.app&quot;)@section(&quot;title&quot;,&quot;新增Q&amp;A&quot;)@section(&quot;content&quot;)&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;card col-12&quot;&gt; &lt;div class=&quot;card-header&quot;&gt; &lt;a href=&quot;list&quot; class=&quot;btn btn-secondary&quot;&gt;回上頁&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;form method=&quot;post&quot; action=&quot;insert&quot;&gt; &#123;&#123; csrf_field() &#125;&#125; &lt;div class=&quot;row&quot;&gt; &lt;label class=&quot;col-form-lable col-3 text-right&quot;&gt;問題&lt;/label&gt; // 標題改成問題 &lt;div class=&quot;col-6&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;question&quot; required&gt; // name記得修改 &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row mt-3&quot;&gt; &lt;label class=&quot;col-form-lable col-3 text-right&quot;&gt;回答&lt;/label&gt; // 新增回答，輸入框屬性是textarea &lt;div class=&quot;col-6&quot;&gt; &lt;textarea type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;answer&quot; rows=&quot;3&quot; required&gt;&lt;/textarea&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;card-body text-center mt-3&quot;&gt; &lt;button class=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;確定&lt;/button&gt; &lt;/div&gt; &lt;/form&gt;&lt;/div&gt;@endsection {!! $data-&gt;content !!}: 前後大括號和雙驚嘆號代表以html的抓取因為資料表裡的content內容包含&quot;&lt;br&gt;&quot;，直接用html顯示才不會出現 將notice&#x2F;edit.blade 內容複製貼上到qa&#x2F;edit.blade 1234567891011121314151617181920212223242526272829303132@extends(&quot;admin.app&quot;)@section(&quot;title&quot;,&quot;QA修改內容&quot;)@section(&quot;content&quot;)&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;card col-12&quot;&gt; &lt;div class=&quot;card-header&quot;&gt; &lt;a href=&quot;../list&quot; class=&quot;btn btn-secondary&quot;&gt;回上頁&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;form method=&quot;post&quot; action=&quot;../update&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;&#123;&#123; $qa-&gt;id &#125;&#125;&quot;&gt; &#123;&#123; csrf_field() &#125;&#125; &lt;div class=&quot;row&quot;&gt; &lt;label class=&quot;col-form-lable col-3 text-right&quot;&gt;問題&lt;/label&gt; &lt;div class=&quot;col-9&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;question&quot; value=&quot;&#123;&#123; $qa-&gt;question &#125;&#125;&quot; required&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row&quot;&gt; &lt;label class=&quot;col-form-lable col-3 text-right&quot;&gt;回答&lt;/label&gt; &lt;div class=&quot;col-9&quot;&gt; &lt;textarea type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;content&quot; required&gt;&#123;!! str_replace(&quot;&lt;br/&gt;&quot;,&quot;\\n&quot;,$qa-&gt;content) !!&#125;&lt;/textarea&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;card-body text-center mt-3&quot;&gt; &lt;button class=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;確定&lt;/button&gt; &lt;/div&gt; &lt;/form&gt;&lt;/div&gt;@endsection &lt;textarea&gt;和前述list相同原因，裡面加入str_replace(&quot;&lt;br/&gt;&quot;,&quot;\\n&quot;,$qa-&gt;content) 將&lt;br&gt;轉換成\\n讓&lt;textarea&gt;可以正常顯示 name和title記得修改 這裡應該要回去Controller寫方法，不過前面已經都貼上去了 AdminQaController_修改&更新123456789101112131415161718192021public function edit(Request $req)&#123; $qa = Qa::find($req-&gt;id); return view(&quot;admin.qa.edit&quot;,compact(&quot;qa&quot;));&#125;public function update(Request $req)&#123; $content = $req-&gt;content; if(!empty($content))&#123; // str_replace:取代字串 // 將輸入框的換行轉換為網頁的換行 $content = str_replace(&quot;\\n&quot;,&quot;&lt;br/&gt;&quot;, $content); &#125; $qa = Qa::find($req-&gt;id); $qa-&gt;question = $req-&gt;question; $qa-&gt;content = $content; $qa-&gt;update(); Session::flash(&quot;message&quot;, &quot;已修改&quot;); return redirect(&quot;/admin/qa/list&quot;);&#125; 刪除功能要去Model和Controller 1234567891011121314// Model的部分public function deleteQa($ids)&#123; self::wherein(&quot;id&quot;, $ids)-&gt;delete();&#125;// Controller的部分public function delete(Request $req)&#123; (new Qa())-&gt;deleteQa($req-&gt;id); Session::flash(&quot;message&quot;, &quot;已刪除&quot;); return redirect(&quot;/admin/qa/list&quot;);&#125; 來做前台吧！先到QaController新增方法 12345678class QaController extends Controller&#123; public function list()&#123; $list = Qa::all(); return view(&quot;front.qa&quot;,compact(&quot;list&quot;)); &#125;&#125; 然後建個前台頁面front/qa.blade，將原本檔案內容複製貼上","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Lavarel","slug":"職訓/Lavarel","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Lavarel/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/categories/Lavarel/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/tags/Lavarel/"}]},{"title":"Bootstrap  03.","slug":"boorstrap-03","date":"2024-06-07T05:06:07.000Z","updated":"2024-06-17T05:18:45.409Z","comments":true,"path":"2024/06/07/boorstrap-03/","permalink":"http://appledog0113.github.io/2024/06/07/boorstrap-03/","excerpt":"","text":"隨便筆記12position: relative; position: absolute; relative: 相對位置，相對的對象是父元素absolute: 絕對位置，以父元素為對象的絕對位置 可以設定父元素是相對位置，決定在版面上的位置（任意移動）再設定子元素是絕對位置，用以設定在父元素內的的位置 簡易的RWD1234567891011121314@media screen and (max-width:&quot;1024px&quot;) &#123; .section01&#123; width: 100%; &#125; .section02&#123; width: 100%; &#125;&#125;@media screen and (max-width:&quot;768px&quot;) &#123; .s02_box01&#123; width: 48%; &#125;&#125; 反正最後都會用flexbox或Gride或bootstrap的container知道有這個東西就好","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Bootstrap","slug":"職訓/Bootstrap","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Bootstrap/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/categories/Bootstrap/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/tags/Bootstrap/"}]},{"title":"Java 簡介 02","slug":"java-02","date":"2024-06-06T00:22:19.000Z","updated":"2024-06-14T00:50:54.194Z","comments":true,"path":"2024/06/06/java-02/","permalink":"http://appledog0113.github.io/2024/06/06/java-02/","excerpt":"","text":"類別的進階認識認識建構元 建構元：建立物件時能夠幫物件設定初始值 建構元的名稱必須和所屬類別的名稱相同 可視為一種特殊函數 不會有回傳值 可以多載 建構元的定義格式123修飾子 類別名稱(型態1 引數1,型態2 引數2,)&#123; 程式敘述;&#125; 1. 呼叫時機 一般函數 需要用到時再呼叫 建構元 建立物件時便會自動呼叫並執行 可以對成員做初始化設定（設定初值） hw9_1_範例_01建構元12345678910111213141516171819class CBox&#123; int length; int width; int height; public CBox(int l,int w, int h)&#123; length=l; width=w; height=h; System.out.println(&quot;from setting: none&quot;);&#125;public class hw9_1&#123; public static void main(String args[])&#123; CBox bb = new CBox(5,9,7); System.out.print(&quot;length:&quot;+bb.length+&quot;\\t width:&quot;+bb.width+&quot;\\t height:&quot;+bb.height); &#125;&#125; Output： from setting: nonelength:5 width:9 height:7 先執行CBox bb = new CBox(5,9,7); 因為裡面含有System.out.println(&quot;from setting: none&quot;); 所以會先印出&quot;from setting: none&quot; 後執行System.out.print(&quot;length:&quot;+bb.length+&quot;\\t width:&quot;+bb.width+&quot;\\t height:&quot;+bb.height); 2. 建構元的多載hw9_1範例_02.建構元的多載123456789101112131415161718192021222324252627282930313233class CBox&#123; int length; int width; int height; public CBox(int l,int w, int h)&#123; length=l; width=w; height=h; System.out.println(&quot;from setting: none&quot;); &#125; public CBox()&#123; length=6; width=10; height=8; &#125; &#125;public class hw9_1&#123; public static void main(String args[])&#123; CBox cc = new CBox(5,9,7); System.out.println(&quot;length:&quot;+cc.length+&quot;\\t width:&quot;+cc.width+&quot;\\t height:&quot;+cc.height); CBox bb = new CBox(); System.out.print(&quot;length:&quot;+bb.length+&quot;\\t width:&quot;+bb.width+&quot;\\t height:&quot;+bb.height); &#125;&#125; Output： from setting: nonelength:5 width:9 height:7length:6 width:10 height:8 先執行cc = new CBox(5,9,7); 因為裡面含有System.out.println(&quot;from setting: none&quot;); 所以會先印出&quot;from setting: none&quot; 再執行System.out.print(&quot;length:&quot;+bb.length+&quot;\\t width:&quot;+bb.width+&quot;\\t height:&quot;+bb.height); 再執行CBox bb = new CBox(); 因為建構元裡不含有print , 所以不會印出任何東西 再執行System.out.print(&quot;length:&quot;+bb.length+&quot;\\t width:&quot;+bb.width+&quot;\\t height:&quot;+bb.height); 3. 建構元之間的呼叫 建構元之間的呼叫要透過this() 指的是在建構元內呼叫另一個建構元 12345678910111213141516171819202122232425262728class CBox&#123; int length; int width; int height; public CBox(int l,int w, int h)&#123; length=l; width=w; height=h; System.out.println(&quot;from setting: none&quot;); &#125; public CBox()&#123; this(6,8,10); &lt;-在這裡呼叫前面的CBox &#125;&#125;public class hw9_1&#123; public static void main(String args[])&#123; CBox cc = new CBox(5,9,7); System.out.println(&quot;length:&quot;+cc.length+&quot;\\t width:&quot;+cc.width+&quot;\\t height:&quot;+cc.height); CBox bb = new CBox(); System.out.print(&quot;length:&quot;+bb.length+&quot;\\t width:&quot;+bb.width+&quot;\\t height:&quot;+bb.height); &#125;&#125; Output： from setting: nonelength:5 width:9 height:7from setting: nonelength:6 width:8 height:10 先執行cc = new CBox(5,9,7); 因為裡面含有System.out.println(&quot;from setting: none&quot;); 所以會先印出&quot;from setting: none&quot; 再執行System.out.print(&quot;length:&quot;+bb.length+&quot;\\t width:&quot;+bb.width+&quot;\\t height:&quot;+bb.height); 再執行CBox bb = new CBox(); 因為this(), 執行前面有引數的建構元, 所以會再次印出&quot;from setting: none&quot; 再執行System.out.print(&quot;length:&quot;+bb.length+&quot;\\t width:&quot;+bb.width+&quot;\\t height:&quot;+bb.height); 因為this()給的引數是this(6,8,10), 帶回前面有引數的CBox(int l,int w, int h)結果是6, 8, 10 4. 建構元的公有(public)與私有(private), 及建構元的預設 public: 可以在程式的任何地方被呼叫 private: 無法在建構元所在的類別以外被呼叫 建構元的預設 如果省略建構元Java會呼叫預設建構元 Java的預設建構元格式123public CBox()&#123;&#125; 如果自己建立建構元, 無論引數內容是否備齊, Java都不會再提供預設建構元 類別變數與類別函數實例變數與實例函數 實例變數 定義: 各自獨立且存於不同的記憶體之變數，稱為「實例變數」 (instance variable) 變數擁有自己儲存資料的記憶體空間，不與其它物件共用 類別成員裡 「物件成員的變數」 CC.ctrl1(int a&#x3D;1, int b&#x3D;2) CC.ctrl1(int a&#x3D;3, int b&#x3D;4) int a, int b, 即為實例變數。他們各自獨立且不予其他物件共用，只供自己使用 個人理解就是類別裡的物件成員在類別裡被 單獨取用 實例函數 定義: 類別裡必須先建立物件，再用物件呼叫的函數 類別變數與類別函數的介紹 類別變數 定義: 由類別裡所有的物件共享 必須以static做宣告 java ex: private static int cnt = 0; static約等於全域變數的宣告 類別函數 若將函數定義為類別函數（即加上static）則可直接由類別呼叫 依然可以由物件呼叫，不過要先建立物件 沒有物件就直接用類別呼叫 main()函數前必定有個static修飾子 hw9_2範例_01類別變數與函數的範例123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354// hw9_2class CWin&#123; private String color; private int width; private int height; private static int cnt = 0; public CWin()&#123; this(&quot;Red&quot;,2,2); &#125; public CWin(String str, int w, int h)&#123; color=str; width=w; height=h; cnt++; System.out.println(&quot;Color:&quot;+color+&quot;\\twidth: &quot;+width+&quot;\\theight: &quot;+height); &#125; /* *void count()&#123; c++; &#125; */ public static void count()&#123; System.out.println(cnt+&quot; object(s) created.&quot;); &#125; public static void setZero()&#123; cnt=0; &#125; public static void setValue(int n)&#123; cnt=n; &#125;&#125;public class hw9_2&#123; public static void main(String args[])&#123; CWin sq=new CWin(); CWin.count(); CWin.setZero(); CWin.count(); CWin.setValue(2); CWin.count(); &#125;&#125; Output： Color:Red width: 2 height: 21 object(s) created.0 object(s) created.2 object(s) created. 說明 將int cnt設定為全域變數, 初始值為 0private static int cnt = 0; 設定一個有引數的建構子public CWin(String str, int w, int h)幫 CWin() 類別設定有引數的初始值 設定一個沒有引數的建構子裡面用this(&quot;Red&quot;,2,2);呼叫有引數的建構子, 並裝入設定的引數&quot;Red&quot;,2,2 123 public CWin()&#123; this(&quot;Red&quot;,2,2); &#125; 因為兩個建構子都導向有引數的建構子，所以直接在裡面計數 設定cnt++; 並印出內容物方便辨識println(&quot;Color:&quot;+color+&quot;\\twidth: &quot;+width+&quot;\\theight: &quot;+height); cnt計數是全域變數，故後面的相關函式都用static代表class CWin()內全域共用 CWin sq=new CWin(); 先印出無引數的建構子內容, 也就是呼叫this(&quot;Red&quot;,2,2); CWin.count();確認計數, 已經設定了一個物件所以++cnt&#x3D;0+1, cnt&#x3D;1 印出 1 object(s) created. 後面就是數值設定和確認計數，不多贅述 類別變數與類別函數的限制 類別函數無法存取實例變數或呼叫實例函數 不能使用this()關鍵字 設值給類別型態的變數類別可以做為型態設置給變數 1234567class CWin&#123; ......&#125; main()&#123; CWin cir1, cir2;&#125; 意即將變數:cir1, cir2 皆設定為 CWin類別 1234main()&#123; CWin cir1, cir2; cir2=cir; &#125; 這裡的 cir2 所指向的記憶體位置和cir1完全相同因此修改cir2內容時，cir1會一併被修改（因為是同一個位置的東西！） 舉個例:cir2學生和cir1學生共用一個置物櫃cir2學生變動了置物櫃的內容cir1學生的置物櫃內容也會變動因為兩個人用的是同個置物櫃！ 以類別型態變數傳遞引數 類別可以做為型態設定給物件 格式範例12345傳回值型態 compare(CCircle obj)&#123;&#125;CCircle 被指定為 obj 的型態 由函數傳回類別型態的變數 格式範例12345CCircle compare(CCircle obj)&#123;&#125;CCircle 為變數傳回的型態 舉例來說 一台叫做CCircle的機器（類別）裡有半徑、pi（變數）和比較功能（compare函數）CCircle obj 就是設定一台同樣型號為CCircle的機器，名字叫obj CCircle compare(CCircle obj){} 就是 要使用CCircle機器的比較功能（compare()）的話，要輸入同一型號機器（CCircle類別）的資料 （CCircle obj: obj可以隨意改名，是為了compare函數跑程式規則時使用的變數）（白話文就是：這個功能要放CCircle這個型號的資料進來，為了後續作業方便先給他一個暫定名稱叫obj吧） CCircle compare() 比較功能輸出的結果 格式會是CCircle這個型號機器的資料（內含半徑、pi、比較功能） hw9_3_2_傳回類別型態的變數範例1234567891011121314151617181920212223242526272829class CCircle&#123; private static double pi=3.14; public double radius; public CCircle(double r)&#123; radius=r; &#125; public CCircle compare(CCircle cir)&#123; if(this.radius&gt;cir.radius) return this; else return cir; &#125;&#125;public class hw9_3&#123; public static void main(String args[])&#123; CCircle cir1=new CCircle(1.0); CCircle cir2=new CCircle(2.0); CCircle obj; obj=cir1.compare(cir2); if(cir1==obj) System.out.println(&quot;radius of cir1 is larger&quot;); else System.out.println(&quot;radius of cir2 is larger&quot;); &#125;&#125; Output radius of cir2 is larger 說明有空再補，累累 類別型態的陣列hw9_4_類別型態的陣列及迴圈使用範例1234567891011121314151617181920212223242526272829303132class CScore&#123; private String name; // 姓名 private int math; // 數學成績 private int eng; // 英文成績 CScore(String str,int m, int e)&#123; name=str; math=m; eng=e; &#125; public static void show(CScore c[])&#123; System.out.println(&quot;Name\\tMath\\tENG\\t&quot;); for(int i=0;i&lt;c.length;i++)&#123; System.out.println(c[i].name+&quot;\\t&quot;+c[i].math+&quot;\\t&quot;+c[i].eng); &#125; &#125;&#125;public class hw9_4&#123; public static void main(String args[])&#123; CScore a[]=new CScore[3]; a[0] = new CScore(&quot;Fiona&quot;,86,92); a[1] = new CScore(&quot;Ryan&quot;,95,79); a[2] = new CScore(&quot;Ariel&quot;,81,83); CScore.show(a); &#125;&#125; Output radius of cir2 is larger 說明有空再補，累累","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"職訓/Java","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Java/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/categories/Java/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/tags/Java/"}]},{"title":"Lavarel - 後台管理系統 02.","slug":"lavaral-02","date":"2024-06-05T01:06:30.000Z","updated":"2024-06-05T08:08:52.132Z","comments":true,"path":"2024/06/05/lavaral-02/","permalink":"http://appledog0113.github.io/2024/06/05/lavaral-02/","excerpt":"","text":"上半場全部勾選功能 這邊用的是jQuery，要記得&lt;scritp&gt;引入 至app.blade 增加刪除語法，在&lt;/head&gt;前 app.blade123456789101112131415&lt;script&gt; $(document).ready(function() &#123; $(&quot;#all&quot;).click(function()&#123; if ($(this).is(&quot;:checked&quot;))&#123; // .:代表class // attr: 屬性 // 當id為all的checkbox被選取時, 所有的class為chk的都被選取 // 用class而非id是因為不知道有多少選項會被選取, 被選取數可能會有所增減, 無法得知所有id $(&quot;.chk&quot;).attr(&quot;checked&quot;,true); &#125;else&#123; $(&quot;chk&quot;).attr(&quot;checked&quot;,false); &#125; &#125;) &#125;);&lt;/script&gt; 由於要選取的是.chk的class，因此到list.blade的cheakbox加上這個class名稱 list.blade12345678910&lt;tr&gt; &lt;td class=&quot;col-1 text-center&quot;&gt; &lt;input type=&quot;checkbox&quot; name=&quot;id[]&quot; class=&quot;form-check-input chk&quot; value=&quot;&#123;&#123; $data-&gt;id &#125;&#125;&quot;&gt; // 在以上那行的class &lt;/td&gt; &lt;td class=&quot;col-9 text-left&quot;&gt;&#123;&#123; $data-&gt;title &#125;&#125;&lt;/td&gt; &lt;td class=&quot;col-9 text-left&quot;&gt; &lt;a href=&quot;edit/&#123;&#123; $data -&gt; id &#125;&#125;&quot; class=&quot;btn btn-success text-white&quot;&gt;修改&lt;/a&gt; &lt;/td&gt;&lt;/tr&gt; 刪除功能 在list.blade裡新增&lt;form id=&quot;list&quot; name=&quot;list&quot; method=&quot;post&quot; action=&quot;/admin/notice/delete&quot;&gt;把&lt;table&gt;&lt;/table&gt;包起來, line.19並增加token &#123;&#123; csrf_field() &#125;&#125; list.blade123456789101112131415161718192021222324252627&lt;form id=&quot;list&quot; name=&quot;list&quot; method=&quot;post&quot; action=&quot;/notice/delete&quot;&gt; &#123;&#123; csrf_field() &#125;&#125; &lt;table class=&quot;table table-border border border-dark&quot;&gt; &lt;thead&gt; &lt;tr class=&quot;table table-warning&quot;&gt; &lt;th class=&quot;col-1 text-center&quot; style=&quot;vertical-align: middle;&quot;&gt; &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;all&quot;&gt; &lt;/th&gt; &lt;th class=&quot;col-9 text-center&quot;&gt;注意事項&lt;/th&gt; &lt;th class=&quot;col-2text-center&quot;&gt;修改&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; @foreach($list as $data) &lt;tr&gt; &lt;td class=&quot;col-1 text-center&quot;&gt; &lt;input type=&quot;checkbox&quot; name=&quot;id[]&quot; class=&quot;form-check-input chk&quot; value=&quot;&#123;&#123; $data-&gt;id &#125;&#125;&quot;&gt; &lt;/td&gt; &lt;td class=&quot;col-9 text-left&quot;&gt;&#123;&#123; $data-&gt;title &#125;&#125;&lt;/td&gt; &lt;td class=&quot;col-9 text-left&quot;&gt; &lt;a href=&quot;edit/&#123;&#123; $data -&gt; id &#125;&#125;&quot; class=&quot;btn btn-success text-white&quot;&gt;修改&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; @endforeach &lt;/tbody&gt; &lt;/table&gt;&lt;/form&gt; 至app.blade新增&lt;script&gt; app.blade1234567function doDelete(formName)&#123; if(confirm(&quot;確定刪除？&quot;))&#123; //document.list.submit(); 第一個方法，不用給引數formName，不過只能選id:list的表單 // list那邊也要改(拿掉引述) document.forms[formName].submit(); // 第二個方法，用引述自訂要選取的表單 &#125;&#125; 至 model/Notice.php 增加方法 寫來讓SQL跑的 用來分工用，寫在model讓需要使用時能直接抓取 前面的其他功能也可以寫進model model/Notice.php1234public function deleteNotice($ids) &#123; self::wherein(&quot;id&quot;, $ids)-&gt;delete(); &#125; 至 AdminNoticeController.php 增加方法 AdminNoticeController.php123456public function delete(Request $req)&#123; (new Notice())-&gt;deleteNotice($req-&gt;id); Session::flash(&quot;message&quot;, &quot;已刪除&quot;); return redirect(&quot;/admin/notice/list&quot;);&#125; 測試應該可以動了！ 帳號密碼及認證碼驗證功能 安裝外掛就能實現ㄌ Terminal1composer require mews/captcha 總之給他裝下去就對ㄌ 新增跳轉頁面 Controllers/AdminController.php1234public function login()&#123; return view(&quot;admin.login&quot;); &#125; 新增Login頁面 在這個路徑下 resources\\views\\admin\\login.blade.php admin\\login.blade.php1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-TW&quot;&gt;&lt;head&gt; &lt;meta charset=&quot;UTF-8&quot;&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt; &lt;title&gt;管理系統登入&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/bootstrap.css&quot;&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/admin/sweetalert2.min.css&quot;&gt; &lt;script rel=&quot;stylesheet&quot; src=&quot;/js/admin/sweetalert2.all.min.js&quot;&gt;&lt;/script&gt; &lt;script src=&quot;/js/jquery.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;container mt-4&quot;&gt; &lt;div class=&quot;card&quot;&gt; &lt;form method=&quot;post&quot; action=&quot;admin/doLogin&quot;&gt; &#123;&#123; csrf_field() &#125;&#125; &lt;div class=&quot;row mt-3&quot;&gt; &lt;div class=&quot;col-2 text-center&quot;&gt;帳號&lt;/div&gt; &lt;div class=&quot;col-4&quot;&gt; &lt;input type=&quot;text&quot; name=&quot;userId&quot; class=&quot;form-control&quot; required value=&quot;&#123;&#123;old(&#x27;userId&#x27;)&#125;&#125;&quot;&gt; &lt;/div&gt; &lt;div class=&quot;row mt-3&quot;&gt; &lt;div class=&quot;col-2 text-center&quot;&gt;密碼&lt;/div&gt; &lt;div class=&quot;col-4&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;pwd&quot; class=&quot;form-control&quot; required value=&quot;&#123;&#123;old(&#x27;pwd&#x27;)&#125;&#125;&quot;&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row mt-3&quot;&gt; &lt;div class=&quot;col-2 text-center&quot;&gt;認證碼&lt;/div&gt; &lt;div class=&quot;col-4&quot;&gt; &lt;input type=&quot;password&quot; name=&quot;code&quot; class=&quot;form-control&quot; required value=&quot;&#123;&#123;old(&#x27;code&#x27;)&#125;&#125;&quot;&gt; &lt;/div&gt; &lt;div class=&quot;col-4 ms-2&quot;&gt; &lt;!-- &lt;img src=&quot;/captcha/math?&quot;&gt; 驗證碼為數學題--&gt; &lt;img src=&quot;/captcha/flat?&quot;&gt; &lt;!-- 驗證碼為輸入文字 --&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;row mt-3 text-end mb-3&quot;&gt; &lt;div class=&quot;col-2&quot;&gt; &lt;button type=&quot;submit&quot; class=&quot;btn btn-primary btn-lg&quot;&gt;登入&lt;/button&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt; &lt;/div&gt;&lt;/body&gt;&lt;/html&gt; 可以適當調整驗證碼 vander/mews/captcha/config/剛才安裝的外掛路徑 phpMyAdmin 新增資料表”manager“新增一組帳號密碼 id 帳號 密碼 primary admin 123456 增加路由 AdminController.php12345Route::group([&quot;prefix&quot; =&gt; &quot;admin&quot;], function()&#123;Route::get(&quot;/&quot;,[AdminController::class, &quot;login&quot;]);Route::post(&quot;doLogin&quot;,[AdminController::class, &quot;doLogin&quot;]); // 增加這條Route::get(&quot;home&quot;,[AdminController::class, &quot;home&quot;]);&#125;); 增加方法讓doLogin出現帳號或密碼打錯的提示訊息 AdminController.php123456789101112public function doLogin(Request $req)&#123; $manager = (new Manager())-&gt;getManager($req-&gt;userId, $req-&gt;pwd); if (empty($manager))&#123; // back: 回到前一頁 // withInput: 保留前一輸入資料 // withErrors: 回傳錯誤訊息到前一頁 return back()-&gt;withInput()-&gt;withErrors([&quot;msg&quot; =&gt; &quot;帳號或密碼錯誤&quot;]); &#125;else&#123; // 帳密符合, 轉址 return redirect(&quot;/admin/home&quot;); &#125;&#125; login.blade頁面增加msg顯示的div 一般來說在帳號下面 login.blade12345@if ($errors-&gt;has(&#x27;msg&#x27;))&lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-8 text-danger text-center&quot;&gt;&#123;&#123; $errors-&gt;first(&quot;msg&quot;) &#125;&#125;&lt;/div&gt;&lt;/div&gt;@endif 增加方法讓doLogin出現驗證碼打錯的提示訊息 AdminController.php1234567891011121314151617181920public function doLogin(Request $req)&#123; // 新增if判斷式 if(captcha_check($req-&gt;code) == false)&#123; return back()-&gt;withInput()-&gt;withErrors([&quot;code&quot; =&gt; &quot;驗證碼錯誤&quot;]); exit; &#125; $manager = (new Manager())-&gt;getManager($req-&gt;userId, $req-&gt;pwd); if (empty($manager))&#123; // back: 回到前一頁 // withInput: 保留前一輸入資料 // withErrors: 回傳錯誤訊息到前一頁 return back()-&gt;withInput()-&gt;withErrors([&quot;msg&quot; =&gt; &quot;帳號或密碼錯誤&quot;]); &#125;else&#123; // 帳密符合, 轉址 return redirect(&quot;/admin/home&quot;); &#125;&#125; login.blade頁面增加msg顯示的div 放在驗證碼下面其實都可以啦看要在哪裡顯示自己調位置 login.blade12345@if ($errors-&gt;has(&#x27;code&#x27;)) //記得改成 &#x27;code&#x27;&lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-8 text-danger text-center&quot;&gt;&#123;&#123; $errors-&gt;first(&quot;msg&quot;) &#125;&#125;&lt;/div&gt;&lt;/div&gt;@endif 到這邊可以跑網頁輸入帳號密碼及驗證碼如果錯誤，送出後會跑出錯誤訊息 這樣就成功啦！ 下半場加入middleware驗證功能 新增Session暫存資料, 讓伺服器記住已經成功登入過的資料 AdminController.php123456789101112131415161718192021public function doLogin(Request $req)&#123; if(captcha_check($req-&gt;code) == false)&#123; return back()-&gt;withInput()-&gt;withErrors([&quot;code&quot; =&gt; &quot;驗證碼錯誤&quot;]); exit; &#125; $manager = (new Manager())-&gt;getManager($req-&gt;userId, $req-&gt;pwd); if (empty($manager))&#123; // back: 回到前一頁 // withInput: 保留前一輸入資料 // withErrors: 回傳錯誤訊息到前一頁 return back()-&gt;withInput()-&gt;withErrors([&quot;msg&quot; =&gt; &quot;帳號或密碼錯誤&quot;]); &#125;else&#123; // session: 存在伺服器端的站存資料, 記住已經登入過的人 // 超過config設定的時間會自動清除 session()-&gt;put(&quot;managerId&quot;,$req-&gt;userId); // 新增這段 // 帳密符合, 轉址 return redirect(&quot;/admin/home&quot;); &#125;&#125; 新增middleware設定檔 Terminal1php artisan make:middleware CheckManager 到剛才新增的Middleware\\CheckManager.php新增方法 app\\Http\\Middleware\\CheckManager.php12345678public function handle(Request $request, Closure $next)&#123; if (empty(session()-&gt;get(&quot;managerId&quot;)))&#123; return redirect(&quot;/admin&quot;); exit; &#125; return $next($request);&#125; 到app\\Http\\Kernel.php登入CheckManager的路由 app\\Http\\Kernel.php12345678910111213protected $routeMiddleware = [ &#x27;auth&#x27; =&gt; \\App\\Http\\Middleware\\Authenticate::class, &#x27;auth.basic&#x27; =&gt; \\Illuminate\\Auth\\Middleware\\AuthenticateWithBasicAuth::class, &#x27;cache.headers&#x27; =&gt; \\Illuminate\\Http\\Middleware\\SetCacheHeaders::class, &#x27;can&#x27; =&gt; \\Illuminate\\Auth\\Middleware\\Authorize::class, &#x27;guest&#x27; =&gt; \\App\\Http\\Middleware\\RedirectIfAuthenticated::class, &#x27;password.confirm&#x27; =&gt; \\Illuminate\\Auth\\Middleware\\RequirePassword::class, &#x27;signed&#x27; =&gt; \\Illuminate\\Routing\\Middleware\\ValidateSignature::class, &#x27;throttle&#x27; =&gt; \\Illuminate\\Routing\\Middleware\\ThrottleRequests::class, &#x27;verified&#x27; =&gt; \\Illuminate\\Auth\\Middleware\\EnsureEmailIsVerified::class, &quot;manager&quot; =&gt; \\App\\Http\\Middleware\\CheckManager::class, // 新增上排, 順便替這個Middleware取別名叫manager]; 到web修改路由，讓跳轉時可以經過middleware routes\\web.php123456789101112131415161718Route::group([&quot;prefix&quot; =&gt; &quot;admin&quot;], function()&#123; Route::get(&quot;/&quot;,[AdminController::class, &quot;login&quot;]); Route::post(&quot;doLogin&quot;,[AdminController::class, &quot;doLogin&quot;]); Route::get(&quot;home&quot;,[AdminController::class, &quot;home&quot;])-&gt;middleware(&quot;manager&quot;); // 只在單獨的路由新增, 代表只有執行這個路由時經過驗證&#125;);// group內新增 &quot;middleware&quot;=&gt;&quot;manager&quot;, 代表整個group都會經過middlewareRoute::group([&quot;middleware&quot;=&gt;&quot;manager&quot;,&quot;prefix&quot; =&gt; &quot;admin/notice&quot;], function()&#123; Route::get(&quot;list&quot;,[AdminNoticeController::class, &quot;list&quot;]); Route::get(&quot;add&quot;,[AdminNoticeController::class, &quot;add&quot;]); Route::post(&quot;insert&quot;,[AdminNoticeController::class, &quot;insert&quot;]); Route::get(&quot;edit/&#123;id&#125;&quot;,[AdminNoticeController::class, &quot;edit&quot;]); Route::post(&quot;update&quot;,[AdminNoticeController::class, &quot;update&quot;]); Route::post(&quot;delete&quot;,[AdminNoticeController::class, &quot;delete&quot;]);&#125;); 完成後只要沒有成功登入，就算輸入路徑也無法跳轉，會回到Login登入頁面如果有成功登入，在config設定的Session暫存時間內都可以不用再登入直接進入home page 參考資料 [技術探討]jQuery小而精的網頁函式庫 (一)jQuery JavsScript函式庫MIS2000Lab.的「HTML5 認證考試，從零開始」#10–寫得少，做得多。jQuery簡介(I) ↑這篇在運作模式上寫的滿清楚的","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Lavarel","slug":"職訓/Lavarel","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Lavarel/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/categories/Lavarel/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/tags/Lavarel/"}]},{"title":"Bootstrap css練習 02.","slug":"bootstrap-02","date":"2024-06-04T07:17:58.000Z","updated":"2024-06-04T08:22:51.274Z","comments":true,"path":"2024/06/04/bootstrap-02/","permalink":"http://appledog0113.github.io/2024/06/04/bootstrap-02/","excerpt":"","text":"前言有些原本就會的東西就直接跳過主要紀錄概念釐清跟參數和技術的部份 網頁建置練習 tips: 不能使用 Bootstrap 練習題 01. 123456789101112131415161718192021222324252627282930313233343536373839404142434445464748495051525354555657585960616263646566676869707172737475767778798081&lt;!DOCTYPE html&gt;&lt;html lang=&quot;zh-TW&quot;&gt; &lt;head&gt; &lt;meta charset=&quot;UTF-8&quot; /&gt; &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot; /&gt; &lt;title&gt;練習&lt;/title&gt; &lt;link rel=&quot;stylesheet&quot; href=&quot;css/myall_00.css&quot; /&gt; &lt;style&gt; .wrapper &#123; width: 1024px; margin: 0 auto; text-align: center; &#125; .logo &#123; height: 240px; background-image: url(imges/nature_02.jpg); background-size: cover; background-repeat: no-repeat; background-position: center 40%; &#125; nav &#123; display: block; text-align: center; margin: 5px 0px; ul &#123; display: inline-block; li &#123; list-style-type: none; float: left; a &#123; display: block; &#125; &#125; &#125; &#125; .content_in &#123; text-align: center; padding: 5px 10px 20px 10px; font-size: large; p &#123; color: #fff !important; &#125; &#125; footer &#123; font-size: 18px; font-weight: bolder; margin: 5px 0px; &#125; &lt;/style&gt; &lt;/head&gt; &lt;body class=&quot;bg-04&quot;&gt; &lt;div class=&quot;wrapper&quot;&gt; &lt;div class=&quot;banner&quot;&gt; &lt;div class=&quot;logo&quot;&gt;&lt;/div&gt; &lt;nav class=&quot;bg-02&quot;&gt; &lt;ul&gt; &lt;li&gt;&lt;a class=&quot;bg-btn01&quot; href=&quot;#&quot;&gt;首頁&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a class=&quot;bg-btn01&quot; href=&quot;#&quot;&gt;測試項目&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a class=&quot;bg-btn01&quot; href=&quot;#&quot;&gt;不告訴你&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a class=&quot;bg-btn01&quot; href=&quot;#&quot;&gt;這是什麼&lt;/a&gt;&lt;/li&gt; &lt;li&gt;&lt;a class=&quot;bg-btn01&quot; href=&quot;#&quot;&gt;友站連結&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt; &lt;/nav&gt; &lt;/div&gt; &lt;div class=&quot;content&quot;&gt; &lt;div class=&quot;content_in bg-03&quot;&gt; &lt;h1&gt;首頁&lt;/h1&gt; &lt;p&gt; 幾個信箱地說命運一步接觸本次想像成績或者奧客恢復江湖固定頻道，也有一致創業，金額流程將來，全身尤其自信都是，地位界面曾經版權所有安裝富岡傢俱日記藥品魅力正式上去怎麼積極，微微西部蔬菜調查，可以用女人買賣原文各地西安仔細，進來證件規格，烏日事實必然歐美自由。 &lt;/p&gt; &lt;p&gt; 制定型號秘密對面國內外以為校園說了觀念別的看過步驟網通或是，共享害怕出發首頁鈴聲商城期限，費用怎麼會事故格式圖文防止後來頭銜上門綜合那樣，承諾提示不需要反饋任何留在總是證件所謂指出他在本網，製造消除值得觀念嚴格聯合協調導演，音樂許可還會遇到，一天控制，環。 &lt;/p&gt; &lt;a class=&quot;bg-btn01&quot; href=&quot;#&quot;&gt;按鈕&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;footer class=&quot;bg-01&quot;&gt;版權所有，翻印必究&lt;/footer&gt; &lt;/div&gt; &lt;/body&gt;&lt;/html&gt; padding和marge的設定順序： ex. (unit:px,%…)padding: 上 右 下 左;marge: X軸 Y軸; 下拉式內容覆蓋效果內文設定 重點在.box_in和.roller 123456789101112&lt;div class=&quot;content&quot;&gt; &lt;div class=&quot;box&quot;&gt; &lt;div class=&quot;box_in&quot;&gt; &lt;div class=&quot;roller&quot;&gt;卷軸文字&lt;/div&gt; &lt;img src=&quot;https://fakeimg.pl/600x400/200&quot; width=&quot;100%&quot; /&gt; &lt;h2&gt;最新消息&lt;/h2&gt; &lt;p&gt; 以前便是肯定建築緊緊民主辛苦，溫暖對方民主對面，對你規範高考尷尬無法配合以為其他的陷入感受選項有點。 &lt;/p&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; CSS效果設定 在.box_in上面覆蓋一層.roller作為卷軸 .box_in裡設定.roller的css動畫效果 123456789101112131415161718192021222324252627.content .box &#123; display: inline-block; width: 32%; height: auto; margin-top: 15px; .box_in &#123; position: relative; /* 相對位置 */ height: auto; .roller &#123; display: flex; justify-content: center; align-items: center; /*-- 終究要用flex--*/ position: absolute; /* 絕對位置 */ width: 100%; height: 100%; background-color: var(--mycolor05); opacity: 0%; top: -30%; &#125; &#125; .box_in:hover .roller &#123; opacity: 100%; transition: 750ms; top: 0%; &#125;&#125; 後記找時間研究一下gif怎麼放吧…","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Bootstrap","slug":"職訓/Bootstrap","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Bootstrap/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/categories/Bootstrap/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/tags/Bootstrap/"}]},{"title":"Java 簡介 01","slug":"java-method-01","date":"2024-05-31T01:22:39.000Z","updated":"2024-06-07T04:48:48.276Z","comments":true,"path":"2024/05/31/java-method-01/","permalink":"http://appledog0113.github.io/2024/05/31/java-method-01/","excerpt":"","text":"認識Java的函數Java將函數稱為method 1234public static 傳回值型態 函數名稱(型態 引數1, 型態 引數2,...)&#123; 程式敘述; return 運算式; // 沒有要回傳的話可以省略&#125; 範例： 12345678public class hw7_1&#123;public static void main(String args[])&#123; proverb();&#125;private static void proverb()&#123; System.out.print(&quot;Two heads are better than one.&quot;); &#125;&#125; 執行 proverb();可得 System.out.print(&quot;Two heads are better than one.&quot;);印出結果印出 Two heads are better than one. 函數引數傳遞的方法函數遞迴的撰寫認識函數的多數認識類別在類別裡使用資料成員與函數成員學習this關鍵字的用法 this：強調類別本身的成員，而非變數成員。可以在前方加上this 12345678910111213141516class test&#123; int num=5; void show()&#123; int num=10; System.out.println(&quot;this.num: &quot;+this.num); System.out.println(&quot;num: &quot;+num); &#125;&#125;public class aaaaaa&#123; public static void main(String args[])&#123; test obj; obj = new test(); obj.show(); &#125;&#125; print： this.num: 5num: 10 如果把obj.num變數設為 8 1234567891011121314151617class test&#123; int num=5; void show()&#123; int num=10; System.out.println(&quot;this.num: &quot;+this.num); System.out.println(&quot;num: &quot;+num); &#125;&#125;public class aaaaaa&#123; public static void main(String args[])&#123; test obj; obj = new test(); obj.num=8 obj.show(); &#125;&#125; print 的結果： this.num: 8num: 10 在類別裡設計函數的多載 類別(class)裡的成員可以設定很多組，用引數控制類別取得的內容 類別的多載範例12345678910111213141516171819202122232425262728293031323334353637383940class CCalculator&#123; int a,b,c; double area(int base, int height)&#123; a=base; b=height; return a*b/2; &#125; double area(double radius)&#123; double a=radius; return a*a*3.14; &#125; double area(int upper,int base,int height)&#123; a=upper; b=base; c=height; return (a+b)*c/2; &#125;&#125;public class hw8_4&#123; public static void main(String arg[])&#123; Scanner scn=new Scanner(System.in); CCalculator CC; CC = new CCalculator(); int a,b,c; System.out.println(&quot;請輸入第一個數字：&quot;); a = scn.nextInt(); System.out.println(&quot;請輸入第二個數字：&quot;); b = scn.nextInt(); System.out.println(&quot;請輸入第三個數字：&quot;); c = scn.nextInt(); System.out.println(&quot;圓形面積=&quot;+CC.area(a)); System.out.println(&quot;三角形面積=&quot;+CC.area(a,b)); System.out.println(&quot;梯形面積=&quot;+CC.area(a,b,c)); &#125;&#125; 如上範例，類別CCalculator裡同時設定了三個不同的double area()裡面各由不同數量的引數控制，代表不同的項目 123456789101112131415double area(double radius)&#123; // 比如說這個CCalculator area()裡只有一個引數 double a=radius; // 引數設定是將類別成員(int a)的名稱設為半徑(radius) return a*a*3.14; // 回傳值是計算圓面積的結果 &#125;// 這個這個CCalculator area()裡有三個引數// 回傳值是計算梯形面積的結果double area(int upper,int base,int height)&#123; a=upper; b=base; c=height; return (a+b)*c/2;&#125; 在類別裡設定好後，可以在main()呼叫 用不同的引數會直接呼叫不同的CCalculator area() 12345678910111213141516171819public class hw8_4&#123; public static void main(String arg[])&#123; Scanner scn=new Scanner(System.in); CCalculator CC; CC = new CCalculator(); int a,b,c; System.out.println(&quot;請輸入第一個數字：&quot;); a = scn.nextInt(); System.out.println(&quot;請輸入第二個數字：&quot;); b = scn.nextInt(); System.out.println(&quot;請輸入第三個數字：&quot;); c = scn.nextInt(); System.out.println(&quot;圓形面積=&quot;+CC.area(a)); System.out.println(&quot;三角形面積=&quot;+CC.area(a,b)); System.out.println(&quot;梯形面積=&quot;+CC.area(a,b,c)); &#125;&#125; System.out.println(&quot;圓形面積=&quot;+CC.area(a)); 由於只有一個引數，所以會直接回傳 半徑&#x3D;a 的圓面積計算結果 System.out.println(&quot;三角形面積=&quot;+CC.area(a,b)); 有二個引數，所以會回傳 底&#x3D;a, 高&#x3D;b 的三角形面積計算結果 System.out.println(&quot;梯形面積=&quot;+CC.area(a,b,c)); 有三個引數，所以會回傳 上底&#x3D;a, 下底&#x3D;b, 高&#x3D;c 的三角形面積計算結果 類別要寫在同一支code裡，不然就要打包用import 注意到嗎？多載裡的引數可以分開設定。 簡單來說就是把自己要的規則在類別裡用引數設定好，main()要用的時候可以直接呼叫 多載常犯的錯誤 多載不能引數內容相同，僅有型態不同 123456789void double setCircle(double r)&#123;&#125;;int double setCircle(double r)&#123;&#125;;這樣的程式碼是錯誤的！因為引數相同，Java 無法判斷哪個函數被呼叫void double setCircle(double r, String color)&#123;&#125;;int double setCircle(double r)&#123;&#125;;這樣就可以執行會依據多載的引數不同，傳回相應型態多載的內容 學習如何使用類別裡的公有與私有成員在類別外(ex. main())存取類別成員時，如果沒有設相關限制容易出bug或安全漏洞 ex. radius = -2 但是r*r = -2*-2 = 4 出現輸入負數一樣可以出現結果的bug 可以用設定修飾子public, private 來設定類別成員的公有和私有。 private 只能被同個類別裡的其他成員存取 不能被類別外存取 也不能被其他package存取 public 可以被其他類別存取 也可以被其他package存取 沒有設定private或public 可以被同個package的類別外存取 不能被其他package存取 hw8_5_試指出下列程式碼錯誤之處，並加以訂正：123456789101112131415161718192021class CWin&#123; private int width; private int height; public void show_area() &#123; System.out.println(&quot;area=&quot;+width*height); &#125; &#125; public class ch8_5 &#123; public static void main(String args[]) &#123; CWin win1=new CWin(); win1.width=-5; win1.height=12; win1.show_area(); &#125; &#125; 由於width和heigh被設定為private, 不能被main()存取所以會報錯 hw8_5 修改後的內容1234567891011121314151617181920212223242526272829303132333435363738394041424344454647484950515253545556575859class CWin&#123; private int width; private int height; public void show_area() &#123; System.out.println(&quot;area=&quot;+area()); &#125;/* w,h 分開寫的版本 public void setWidth(int w)&#123; if (w&gt;0)&#123; width = w; System.out.println(&quot;Width: &quot; +width); &#125;else&#123; System.out.println(&quot;width error&quot;); &#125; &#125; public void setHeight(int h)&#123; if (h&gt;0)&#123; height = h; System.out.println(&quot;height: &quot; +height); &#125;else&#123; System.out.println(&quot;height error&quot;); &#125; &#125;*/ public void setVal(int w, int h)&#123; if(w&gt;0&amp;&amp;h&gt;0)&#123; width=w; height=h; System.out.println(&quot;Width: &quot; +width); System.out.println(&quot;height: &quot; +height); &#125;else&#123; System.out.println(&quot;Input error&quot;); &#125; &#125; private double area()&#123; return width*height; &#125; &#125; public class hw8_5&#123; public static void main(String args[]) &#123; CWin win1=new CWin(); win1.setVal(-5,12); // win1.setWidth(-5); // win1.setHeight(-12); win1.show_area(); &#125;&#125; 用setVal()重新設定width和height的數值在裡面跑判斷式規範數值範圍重新呼叫新的函式 顯示結果12Input errorarea=0.0 後記","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"職訓/Java","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Java/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/categories/Java/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/tags/Java/"}]},{"title":"Bootstrap 簡介 01.","slug":"bootstrap-01","date":"2024-05-29T16:00:00.000Z","updated":"2024-06-04T07:12:48.700Z","comments":true,"path":"2024/05/30/bootstrap-01/","permalink":"http://appledog0113.github.io/2024/05/30/bootstrap-01/","excerpt":"前言詳見官方說明文件課堂引入要記得用打包下來的檔案避免流量爆炸css用 &lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot;&gt;引入js 用 &lt;script src=&quot;js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;引入 ：這是自己的筆記","text":"前言詳見官方說明文件課堂引入要記得用打包下來的檔案避免流量爆炸css用 &lt;link rel=&quot;stylesheet&quot; href=&quot;css/bootstrap.min.css&quot;&gt;引入js 用 &lt;script src=&quot;js/bootstrap.bundle.min.js&quot;&gt;&lt;/script&gt;引入 ：這是自己的筆記 css自訂除了bootstrap外可以額外自訂內容比如說很醜的顏色系列（primary、danger…等）可以自己換掉或新增自定義 自定義顏色樣式 要避開保留關鍵字！！！很醜顏色系列的名字不能用，優先度不同 用important可以蓋過去但建議不要亂用 123456789101112131415161718192021222324252627282930313233343536// 從原始目錄自定義// 開頭固定為 :root&#123;&#125;&lt;head&gt; &lt;style&gt; /*:root-&gt;設定全域變數 */ :root&#123; --mycolor01: #b78338; --mycolor02: #915c4c; --mycolor03: #40686a; --mycolor04: #2f1812; &#125; /* 以下就可以用新設定的顏色名稱自訂新樣式囉 */ .bg-01 &#123; /*樣式名稱*/ background-color: var(--mycolor01); /*設定背景色; 以var(--變數名稱)使用變數*/ color: var(--mycolor04); /*設定文字顏色*/ &#125; .bg-02 &#123; background-color: var(--mycolor02); color: var(--mycolor04); &#125; .bg-03 &#123; background-color: var(--mycolor03); color: var(--mycolor01); &#125; .bg-04 &#123; background-color: var(--mycolor04); color: var(--mycolor01); &#125; &lt;/style&gt;&lt;/head&gt; 自定義.box樣式並套用到&lt;div&gt; marge: 外距padding: 內距 12345678910111213141516171819&lt;body&gt; &lt;style&gt; .box &#123; height: 200px; width: 300px; border: 2px solid dimgray; padding: 20px; box-sizing: border-box; /*box-sizing: content-box; 指定容器長寬從內容起算 border-box; 指定容器長寬從邊緣起算 */ text-align: center; &#125; &lt;/style&gt;&lt;/head&gt;&lt;body&gt; &lt;div class=&quot;box bg-04&quot;&gt;&lt;/div&gt; // 上面設定好的內容可以直接使用囉！&lt;/body&gt; 參考資料 Box-sizing - 金魚都能懂的CSS必學屬性 另存.css檔引入html使用 將css設定另存到資料夾，副檔名.css 資料夾要取名css，同理javascript要取名叫js 引用方式&lt;link rel=&quot;stylesheet&quot; href=&quot;css/[檔名].css&quot;&gt; 常用文字樣式設定階層1234567891011&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col demo01 text-light&quot;&gt; &lt;h1&gt;壓力古代現有著名應當法規台北展示&lt;/h1&gt; &lt;div class=&quot;h2&quot;&gt;壓力古代現有著名應當法規台北展示&lt;/div&gt; &lt;div class=&quot;h3&quot;&gt;壓力古代現有著名應當法規台北展示&lt;/div&gt; &lt;div class=&quot;h4&quot;&gt;壓力古代現有著名應當法規台北展示&lt;/div&gt; &lt;div class=&quot;h5&quot;&gt;壓力古代現有著名應當法規台北展示&lt;/div&gt; &lt;div class=&quot;h6&quot;&gt;壓力古代現有著名應當法規台北展示&lt;/div&gt; &lt;/div&gt; &lt;/div&gt; bootstrap 建議階層使用&lt;div class=&quot;h1&quot;&gt;的方式做設定 大標題12345678&lt;div class=&quot;col demo01 text-light&quot;&gt; &lt;div class=&quot;display-1&quot;&gt;大標題&lt;/div&gt; &lt;div class=&quot;display-2&quot;&gt;大標題&lt;/div&gt; &lt;div class=&quot;display-3&quot;&gt;大標題&lt;/div&gt; &lt;div class=&quot;display-4&quot;&gt;大標題&lt;/div&gt; &lt;div class=&quot;display-5&quot;&gt;大標題&lt;/div&gt; &lt;div class=&quot;display-6&quot;&gt;大標題&lt;/div&gt;&lt;/div&gt; 看起來比階層更大！ 字形效果123456789&lt;div class=&quot;col demo01 text-light&quot;&gt; &lt;p&gt;這是css的&lt;mark&gt;字形效果&lt;/mark&gt;&lt;/p&gt; // 螢光筆 &lt;p&gt;這是css的&lt;del&gt;字形效果&lt;/del&gt;&lt;/p&gt; // 刪除線 &lt;p&gt;這是css的&lt;s&gt;字形效果&lt;/s&gt;&lt;/p&gt; // 刪除縣 &lt;p&gt;這是css的&lt;u&gt;字形效果&lt;/u&gt;&lt;/p&gt; // 底線 &lt;p&gt;這是css的&lt;small&gt;字形效果&lt;/small&gt;&lt;/p&gt; // 字體縮小 &lt;p&gt;這是css的&lt;strong&gt;字形效果&lt;/strong&gt;&lt;/p&gt; // 粗體 &lt;p&gt;這是css的&lt;em&gt;字形效果&lt;/em&gt;&lt;/p&gt; // 斜體&lt;/div&gt; 無序列表 表現出來就是這個 沒有數字列出的 範例範例範例範例 範例範例範例範例 vscode可以直接輸入ul&gt;li*5 一次列出五列！ 直列1234567891011121314&lt;div class=&quot;col demo01 text-danger text-start&quot;&gt; &lt;ul class=&quot;bg-04 opacity-75&quot;&gt; &lt;li&gt;享受密碼股權。&lt;/li&gt; &lt;li&gt;享受密碼股權。&lt;/li&gt; &lt;ul&gt; &lt;li&gt;解決方案，股票。&lt;/li&gt; &lt;li&gt;解決方案，股票。&lt;/li&gt; &lt;li&gt;解決方案，股票。&lt;/li&gt; &lt;/ul&gt; &lt;li&gt;享受密碼股權。&lt;/li&gt; &lt;li&gt;享受密碼股權。&lt;/li&gt; &lt;li&gt;享受密碼股權。&lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; 橫列 ul 加入 list-inlineli 加入 list-inline-item列表會變橫排，可以和直排交互使用會自動隱藏加入 list-inline-item 樣式的項目的項目符號 1234567891011121314151617181920&lt;div class=&quot;col-2 demo01 text-danger text-start&quot;&gt; &lt;ul class=&quot;list-inline bg-04 opacity-75&quot;&gt; &lt;li class=&quot;list-inline-item&quot;&gt;因為大戰因而每月協&lt;/li&gt; &lt;li class=&quot;list-inline-item&quot;&gt;因為大戰因而每月協&lt;/li&gt; &lt;ul&gt; &lt;li&gt;解決方案&lt;/li&gt; &lt;li&gt;解決方案&lt;/li&gt; &lt;li&gt;解決方案&lt;/li&gt; &lt;/ul&gt; &lt;li class=&quot;list-inline-item m-1 myborder01 bg-02&quot;&gt; &lt;strong&gt;因為大戰因而每月協&lt;/strong&gt; &lt;/li&gt; &lt;li class=&quot;list-inline-item m-1 myborder01 bg-02&quot;&gt; &lt;strong&gt;因為大戰因而每月協&lt;/strong&gt; &lt;/li&gt; &lt;li class=&quot;list-inline-item m-1 myborder01 bg-02&quot;&gt; &lt;strong&gt;因為大戰因而每月協&lt;/strong&gt; &lt;/li&gt; &lt;/ul&gt;&lt;/div&gt; 隱藏超過範圍的文字 text-truncate 的功能 12345&lt;div class=&quot;col demo01 text-truncate text-light&quot;&gt; &lt;div class=&quot;h3 text-light-50&quot;&gt;隱藏超過範圍的文字&lt;/div&gt; 實在調節研究女朋友還在角色前來新竹日誌友情連結表示計算，差不多技巧導航法院突破在於三年進去長沙，精美語文家族能量臺中，看出門口起點高中求助新聞卻是早已，點這裡下載便是機會背景和我同志狀態基層吃螺絲百姓熟悉，屬性奧客時期回去機器那麼多遊客人群，到我還可以論。 &lt;/div&gt;&lt;/div&gt; 文繞圖圖片在左123456789&lt;div class=&quot;col demo01 myborder01 text-light&quot;&gt; &lt;div class=&quot;h3 text-light-50&quot;&gt;文繞圖-左&lt;/div&gt; &lt;img src=&quot;imges/orijit-chatterjee-wEBg_pYtynw-unsplash.jpg&quot; alt=&quot;&quot; width=&quot;150px&quot; class=&quot;float-start me-2&quot;&gt; &lt;p&gt; &lt;strong&gt; 實在調節研究女朋友還在角色前來新竹日誌友情連結表示計算，差不多技巧導航法院突破在於三年進去長沙，精美語文家族能量臺中，看出門口起點高中求助新聞卻是早已，點這裡下載便是機會背景和我同志狀態基層吃螺絲百姓熟悉，屬性奧客時期回去機器那麼多遊客人群，到我還可以論。 &lt;/strong&gt; &lt;/p&gt;&lt;/div&gt; 圖片在右123456789&lt;div class=&quot;col demo01 myborder01 text-light&quot;&gt; &lt;div class=&quot;h3 text-light-50&quot;&gt;文繞圖-右&lt;/div&gt; &lt;img src=&quot;imges/orijit-chatterjee-wEBg_pYtynw-unsplash.jpg&quot; alt=&quot;&quot; width=&quot;150px&quot; class=&quot;float-end ms-2&quot;&gt; &lt;p&gt; &lt;strong&gt; 實在調節研究女朋友還在角色前來新竹日誌友情連結表示計算，差不多技巧導航法院突破在於三年進去長沙，精美語文家族能量臺中，看出門口起點高中求助新聞卻是早已，點這裡下載便是機會背景和我同志狀態基層吃螺絲百姓熟悉，屬性奧客時期回去機器那麼多遊客人群，到我還可以論。 &lt;/strong&gt; &lt;/p&gt;&lt;/div&gt; 常用圖片樣式設定圖片縮小1234&lt;div class=&quot;demo02 myborder01&quot;&gt; &lt;div class=&quot;h1 text-center bg-01&quot;&gt;圖片縮小&lt;/div&gt; &lt;img src=&quot;/imges/nature_02.jpg&quot; alt=&quot;&quot; width=&quot;80%&quot; /&gt;&lt;/div&gt; 圖片限制在範圍內1234&lt;div class=&quot;demo02 myborder01&quot;&gt; &lt;div class=&quot;h1 text-center bg-01&quot;&gt;限制在範圍內&lt;/div&gt; &lt;img src=&quot;/imges/nature_02.jpg&quot; alt=&quot;&quot; class=&quot;img-fluid&quot; /&gt;&lt;/div&gt; 加上相片外框1234&lt;div class=&quot;demo02 myborder01&quot;&gt; &lt;div class=&quot;h1 text-center bg-01&quot;&gt;加上相片外框&lt;/div&gt; &lt;img src=&quot;/imges/nature_02.jpg&quot; alt=&quot;&quot; class=&quot;img-thumbnail&quot; /&gt;&lt;/div&gt; d-block1234567&lt;div class=&quot;col demo02 myborder01&quot;&gt; &lt;img src=&quot;https://fakeimg.pl/300x200/200&quot; alt=&quot;&quot; class=&quot;img-thumbnail d-block mx-auto&quot; /&gt; &lt;img src=&quot;https://fakeimg.pl/300x200/568&quot; alt=&quot;&quot; class=&quot;img-thumbnail d-block mx-auto&quot; /&gt;&lt;/div&gt; figure 圖片說明123456789&lt;div class=&quot;col demo02 myborder01&quot;&gt; &lt;div class=&quot;h3 text-center bg-01&quot;&gt;圖片說明&lt;/div&gt; &lt;figure class=&quot;figure&quot;&gt; &lt;img src=&quot;imges/nature_05.jpg&quot; alt=&quot;&quot; class=&quot;figure-img&quot;&gt; &lt;figcaption class=&quot;figure-caption text-center&quot;&gt;荷花池/不是淹死人那個&lt;/figcaption&gt; &lt;div class=&quot;h5&quot;&gt;這是標題&lt;/div&gt; &lt;p&gt;感覺一下字形的不同&lt;/p&gt; &lt;/figure&gt;&lt;/div&gt;","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Bootstrap","slug":"職訓/Bootstrap","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Bootstrap/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/categories/Bootstrap/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/tags/Bootstrap/"}]},{"title":"Lavarel - 後台管理系統 01.","slug":"lavarel-01","date":"2024-05-29T00:39:11.000Z","updated":"2024-06-03T00:54:04.084Z","comments":true,"path":"2024/05/29/lavarel-01/","permalink":"http://appledog0113.github.io/2024/05/29/lavarel-01/","excerpt":"前言課程進度會用到之前的內容有空再補上 代表個人筆記","text":"前言課程進度會用到之前的內容有空再補上 代表個人筆記 上半場：後台分離使用AdminLTE-3.2.0 1. 從老師那邊下載zip檔 網頁工程通常先開發後台管理再開發前台 2. &#x2F;resources&#x2F;views-&gt;新增”&#x2F;admin”-&gt;新增app、home、menu.blade.php檔 每個後台的網址都要做檢查，使用middleware，後面會提這是什麼 3. 打開zip檔，複製index.html內容貼上app.blade4. 剪下sidebar_Menu貼到menu.blade檔案裡 將選單版面分離，也分離權限不同權限登入會看見不同選單功能 app -&gt; 後台layout menu -&gt; 選單 home -&gt; 首頁 5. 將 Main content 剪下貼到 home.blade 裡6. 在原本sidebar的位置引入menu（需要路徑引入特定檔案內容）123&lt;!-- Sidebar Menu --&gt;@include(&quot;admin.menu&quot;) // 引入檔案&lt;!-- /.sidebar-menu --&gt; 7. 在原本Main content的位置抓content內容（只要名稱能夠抓到就會引入，不用給路徑）123&lt;!-- Main content --&gt;@yield(&quot;content&quot;)&lt;!-- /.content --&gt; 目前這三個都是網頁架構，固定要顯示的網頁內容如果頁面要抽換 直接改home裡面的頁面顯示 即可所以content只會有一個在home裡（就是home的主架構），其他都是 抽換其中內容 而已 yield：動態內容 include：靜態內容 參考資料Laravel-yield的使用Laravel 入門：來認識 Blade 吧 8. 前面有放css和js檔案的話要記得改app.blade的引入路徑9. home.blade裡要繼承頁面在最前方加入 123456@extends(&quot;admin.app&quot;) //繼承@section(&quot;content&quot;)&lt;section&gt; Main content貼上的內容&lt;/section&gt;@endsection 10. 指令處輸入：php artisan make:controller Admin&#x2F;AdminController1234567// 新增以下方法// 將home.blade的內容讓view顯示class AdminController extends Controller&#123; public function home()&#123; return view(&quot;admin.home&quot;); &#125;&#125; 11. 加入路由路徑：/route/web 123Route::group([&quot;prefix&quot; =&gt; &quot;admin&quot;], function()&#123; route::get(&quot;home&quot;,[AdminController::class, &quot;home&quot;]);&#125;); 12. 打開server到 /admin/home 確認網頁內容 下半場：後台建置1. 到menu.blade把不會用到的東西刪掉ex. &lt;li class=&quot;nav-item menu-open&quot;&gt; 2. widget改成 注意事項（要連結的網頁名稱，之前做的那個）3. 指令處輸入：php artisan make:controller Admin&#x2F;AdminNoticeController 新增 AdminNoticeController 4. 新增方法1234567891011121314151617181920212223242526272829303132333435class AdminNoticeController extends Controller&#123; // 取得 &quot;Notice&quot; 資料表內容 // 就是之前建的注意事項網頁 public function list()&#123; // get()與all() 取全部資料 // 此處取 Notice 資料表 $list = Notice::get(); return view(&quot;admin.notice.list&quot;, compact(&quot;list&quot;)); &#125; // 資料表輸入新增資料的內容 public function add()&#123; return view(&quot;admin.notice.add&quot;); &#125; // 資料表新增資料 public function insert(Request $req)&#123; $notice = new Notice(); $notice-&gt;title = $req-&gt;title; $notice-&gt;save(); Session::flash(&quot;message&quot;, &quot;已新增&quot;); return redirect(&quot;/admin/notice/list&quot;); &#125;&#125; 5. 新增&#x2F;notice&#x2F;list.blade.php123456789101112131415161718192021222324252627282930313233343536//頁面新增以下內容@extends(&quot;admin.app&quot;)@section(&quot;content&quot;)&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;cole-12&quot;&gt; &lt;table class=&quot;table table-border border border-dark&quot;&gt; &lt;thead&gt; &lt;tr class=&quot;table table-warning&quot;&gt; &lt;th class=&quot;col-1 text-center&quot; style=&quot;vertical-align: middle;&quot;&gt; &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;all&quot;&gt; &lt;/th&gt; &lt;th class=&quot;col-9 text-center&quot;&gt;注意事項&lt;/th&gt; &lt;th class=&quot;col-2text-center&quot;&gt;修改&lt;/th&gt; &lt;/tr&gt; &lt;/thead&gt; &lt;tbody&gt; @foreach($list as $data) &lt;tr&gt; &lt;td class=&quot;col-1 text-center&quot;&gt; &lt;input type=&quot;checkbox&quot; name=&quot;id[]&quot; class=&quot;form-check-input&quot; value=&quot;&#123;&#123; $data-&gt;id &#125;&#125;&quot;&gt; &lt;/td&gt; &lt;td class=&quot;col-9 text-left&quot;&gt;&#123;&#123; $data-&gt;title &#125;&#125;&lt;/td&gt; &lt;td class=&quot;col-9 text-left&quot;&gt; &lt;a href=&quot;edit/&#123;&#123; $data -&gt; id &#125;&#125;&quot; class=&quot;btn btn-success text-white&quot;&gt;修改&lt;/a&gt; &lt;/td&gt; &lt;/tr&gt; @endforeach &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt;@endsection 7. 新增路由（&#x2F;route&#x2F;web）12345678// 新增以下內容，連結notice功能 Route::group([&quot;prefix&quot; =&gt; &quot;admin/notice&quot;], function()&#123; Route::get(&quot;list&quot;,[AdminNoticeController::class, &quot;list&quot;]); Route::get(&quot;add&quot;,[AdminNoticeController::class, &quot;add&quot;]); Route::post(&quot;insert&quot;,[AdminNoticeController::class, &quot;insert&quot;]); &#125;); 這時候到 server:8000&#x2F;admin&#x2F;notice&#x2F;list 應該可以看到notice表格的內容 id 取名的時候要有唯一性，不可使用id[]陣列表示，但是可以 &#123;&#123; $data->id &#125;&#125; 抓內容作為id設定 8. 到app.blade修改 Content Header (Page Header)123456&lt;h1 class=&quot;m-0&quot;&gt;@yield(&quot;title&quot;)&lt;/h1&gt; // 本來應該是Dashbord&lt;/div&gt;&lt;!-- /.col --&gt;&lt;div class=&quot;col-sm-6&quot;&gt;&lt;ol class=&quot;breadcrumb float-sm-right&quot;&gt;&lt;li class=&quot;breadcrumb-item&quot;&gt;&lt;a href=&quot;/admin/home&quot;&gt;Home&lt;/a&gt;&lt;/li&gt; // 改連結&lt;li class=&quot;breadcrumb-item active&quot;&gt;@yield(&quot;title&quot;)&lt;/li&gt; // 忘了本來是啥，總之改掉 9. list.blade 增加新增刪除按鈕123456789101112131415// 貼在div container-&gt;row-&gt;col-12 到&lt;table&gt;之前&lt;div class=&quot;card&quot;&gt; &lt;div class=&quot;card-header&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col-1&quot;&gt; &lt;a href=&quot;add&quot; class=&quot;btn btn-primary&quot;&gt;新增&lt;/a&gt; &lt;/div&gt; &lt;div class=&quot;col-1&quot;&gt; &lt;a href=&quot;javascript:doDelete()&quot; class=&quot;btn btn-danger&quot;&gt;刪除&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;&lt;/div&gt; 10. 新增 &#x2F;admin&#x2F;notice&#x2F;add.blade.php 頁面 新增內容總要有輸入和送出的地方就是這個頁面!!! 這個版本沒有把 bootstrap 改成舊的 !!!!!! 版型可能會不一樣 !!! 1234567891011121314151617181920212223242526272829// 排版可以自行調整，這版有點醜@extends(&quot;admin.app&quot;)@section(&quot;title&quot;,&quot;新增注意事項&quot;)@section(&quot;content&quot;)&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;card col-12&quot;&gt; &lt;div class=&quot;card-header&quot;&gt; &lt;a href=&quot;list&quot; class=&quot;btn btn-secondary&quot;&gt;回上頁&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;form method=&quot;post&quot; action=&quot;insert&quot;&gt; &#123;&#123; csrf_field() &#125;&#125; &lt;div class=&quot;row&quot;&gt; &lt;label class=&quot;col-form-lable col-3 text-right&quot;&gt;標題&lt;/label&gt; &lt;div class=&quot;col-9&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;title&quot; require autofocus&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;card-body text-center mt-3&quot;&gt; &lt;button class=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;確定&lt;/button&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt;&lt;/div&gt;@endsection 11. 已新增時跳出通知視窗 使用sweetalret2套件有各種特效可以玩玩看 12345678910111213141516171819// 於/admin/app.blade 內修改&lt;head&gt; // 引入sweetalert2 &lt;link rel=&quot;stylesheet&quot; href=&quot;/css/admin/sweetalert2.min.css&quot;&gt; &lt;script rel=&quot;stylesheet&quot; src=&quot;/js/admin/sweetalert2.all.min.js&quot;&gt;&lt;/script&gt;&lt;/head&gt;&lt;body&gt; // 新增迴圈, 使用sweetalert2 @if(Session::has(&quot;message&quot;)) &lt;script&gt; swal.fire(&quot;&#123;&#123; Session::get(&#x27;message&#x27;) &#125;&#125;&quot;); &lt;/script&gt; @endif&lt;/body&gt; 12. 於adminNoticeController 增加edit的方法12345678910111213141516public function edit(Request $req)&#123; $notice = Notice::find($req-&gt;id); return view(&quot;admin.notice.edit&quot;, compact(&quot;notice&quot;));&#125;public function update(Request $req)&#123; $notice = Notice::find($req-&gt;id); $notice-&gt;title = $req-&gt;title; $notice-&gt;save(); // 也可用 $notice-&gt;update(); Session::flash(&quot;message&quot;, &quot;已修改&quot;); return redirect(&quot;/admin/notice/list&quot;);&#125; 13. 新增 &#x2F;admin&#x2F;notice&#x2F;edit.blade 頁面1234567891011121314151617181920212223242526@extends(&quot;admin.app&quot;)@section(&quot;title&quot;,&quot;修改內容&quot;)@section(&quot;content&quot;)&lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;card col-12&quot;&gt; &lt;div class=&quot;card-header&quot;&gt; &lt;a href=&quot;../list&quot; class=&quot;btn btn-secondary&quot;&gt;回上頁&lt;/a&gt; &lt;/div&gt; &lt;/div&gt; &lt;form method=&quot;post&quot; action=&quot;../update&quot;&gt; &lt;input type=&quot;hidden&quot; name=&quot;id&quot; value=&quot;&#123;&#123; $notice-&gt;id &#125;&#125;&quot;&gt; &#123;&#123; csrf_field() &#125;&#125; &lt;div class=&quot;row&quot;&gt; &lt;label class=&quot;col-form-lable col-3 text-right&quot;&gt;標題&lt;/label&gt; &lt;div class=&quot;col-9&quot;&gt; &lt;input type=&quot;text&quot; class=&quot;form-control&quot; name=&quot;title&quot; value=&quot;&#123;&#123; $notice-&gt;title &#125;&#125;&quot; require autofocus&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=&quot;card-body text-center mt-3&quot;&gt; &lt;button class=&quot;btn btn-primary&quot; type=&quot;submit&quot;&gt;確定&lt;/button&gt; &lt;/div&gt; &lt;/form&gt; &lt;/div&gt;&lt;/div&gt;@endsection","categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Lavarel","slug":"職訓/Lavarel","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Lavarel/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/categories/Lavarel/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/tags/Lavarel/"}]},{"title":"Hello World","slug":"hello-world","date":"2024-05-27T08:03:00.000Z","updated":"2024-06-03T00:54:04.084Z","comments":true,"path":"2024/05/27/hello-world/","permalink":"http://appledog0113.github.io/2024/05/27/hello-world/","excerpt":"","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"職訓/Java","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Java/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/categories/Java/"},{"name":"Lavarel","slug":"職訓/Lavarel","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Lavarel/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/categories/Lavarel/"},{"name":"Bootstrap","slug":"職訓/Bootstrap","permalink":"http://appledog0113.github.io/categories/%E8%81%B7%E8%A8%93/Bootstrap/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/categories/Bootstrap/"}],"tags":[{"name":"職訓","slug":"職訓","permalink":"http://appledog0113.github.io/tags/%E8%81%B7%E8%A8%93/"},{"name":"Java","slug":"Java","permalink":"http://appledog0113.github.io/tags/Java/"},{"name":"Lavarel","slug":"Lavarel","permalink":"http://appledog0113.github.io/tags/Lavarel/"},{"name":"Bootstrap","slug":"Bootstrap","permalink":"http://appledog0113.github.io/tags/Bootstrap/"}]}