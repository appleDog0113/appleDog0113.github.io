{"meta":{"title":"AppleDog's Note","subtitle":"菜蟲從零開始的學習筆記","description":null,"author":"appleDog","url":"http://appleDog0113.github.io","root":"/"},"pages":[],"posts":[{"title":"lavarel","slug":"lavarel_01","date":"2024-05-29T00:39:11.000Z","updated":"2024-05-29T04:57:17.105Z","comments":true,"path":"2024/05/29/lavarel_01/","permalink":"http://appledog0113.github.io/2024/05/29/lavarel_01/","excerpt":"Lavarel - 後台管理系統","text":"Lavarel - 後台管理系統 上半場：後台分離使用AdminLTE-3.2.0 從老師那邊下載zip檔 網頁工程通常先開發後台管理再開發前台 &#x2F;resources&#x2F;views-&gt;新增”&#x2F;admin”-&gt;新增app、home、menu.blade.php檔 每個後台的網址都要做檢查，使用middleware，後面會提這是什麼 打開zip檔，複製index.html內容貼上app.blade 剪下sidebar_Menu貼到menu.blade檔案裡 將選單版面分離，也分離權限不同權限登入會看見不同選單功能 app -&gt; 後台layout menu -&gt; 選單 home -&gt; 首頁 5. 將`Main content`剪下貼到`home.blade`裡 6. 在原本sidebar的位置引入menu（需要路徑引入特定檔案內容） 123&lt;!-- Sidebar Menu --&gt;@include(&quot;admin.menu&quot;) // 引入檔案&lt;!-- /.sidebar-menu --&gt; 7. 在原本Main content的位置抓content內容（只要名稱能夠抓到就會引入，不用給路徑） 1234&lt;!-- Main content --&gt;@yield(&quot;content&quot;)&lt;!-- /.content --&gt; 目前這三個都是網頁架構，固定要顯示的網頁內容 如果頁面要抽換 直接改home裡面的頁面顯示 即可 所以content只會有一個在home裡（就是home的主架構），其他都是 抽換其中內容 而已 yield：動態內容 include：靜態內容 參考資料 Laravel-yield的使用 前面有放css和js檔案的話要記得改app.blade的引入路徑 home.blade裡要繼承頁面 在最前方加入 123456@extends(&quot;admin.app&quot;) //繼承@section(&quot;content&quot;)&lt;section&gt; Main content貼上的內容&lt;/section&gt;@endsection 指令處輸入：php artisan make:controller Admin&#x2F;AdminController 1234567// 新增以下方法// 將home.blade的內容讓view顯示class AdminController extends Controller&#123; public function home()&#123; return view(&quot;admin.home&quot;); &#125;&#125; 加入路由/route/web 123Route::group([&quot;prefix&quot; =&gt; &quot;admin&quot;], function()&#123; route::get(&quot;home&quot;,[AdminController::class, &quot;home&quot;]);&#125;); 打開server到 /admin/home 確認網頁內容 下半場：後台管理 到menu.blade把不會用到的東西刪掉 ex. &lt;li class=&quot;nav-item menu-open&quot;&gt; widget改成 注意事項（要連結的網頁名稱，之前做的那個） 指令處輸入：php artisan make:controller Admin&#x2F;AdminNoticeController 新增 AdminNoticeController 新增方法 1234567891011121314151617181920212223242526272829303132333435class AdminNoticeController extends Controller&#123; // 取得 &quot;Notice&quot; 資料表內容 // 就是之前建的注意事項網頁 public function list()&#123; // get()與all() 取全部資料 // 此處取 Notice 資料表 $list = Notice::get(); return view(&quot;admin.notice,list&quot;, compact(&quot;list&quot;)); &#125; // 資料表輸入新增資料的內容 public function add()&#123; return view(&quot;admin.notice,add&quot;); &#125; // 資料表新增資料 public function insert(Request $req)&#123; $notice = new Notice(); $notice-&gt;title = $req-&gt;title; $notice-&gt;save(); Session::flash(&quot;message&quot;, &quot;已新增&quot;); return redirect(&quot;/admin/notice/list&quot;); &#125;&#125; 新增&#x2F;notice&#x2F;list.blade.php 123456789101112131415161718192021222324252627282930//頁面新增以下內容@extends(&quot;admin.app&quot;)@section(&quot;content&quot;)&lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;cole-12&quot;&gt; &lt;table class=&quot;table table-border border border-dark&quot;&gt; &lt;thead&gt; &lt;th&gt; &lt;td class=&quot;text-center&quot;&gt; &lt;input type=&quot;checkbox&quot; class=&quot;form-check-input&quot; id=&quot;all&quot;&gt; &lt;/td&gt; &lt;td class=&quot;text-left&quot;&gt;注意事項&lt;/td&gt; &lt;/th&gt; &lt;/thead&gt; &lt;tbody&gt; @foreach($list as $data) &lt;tr&gt; &lt;td&gt; &lt;input type=&quot;checkbox&quot; name=&quot;id[]&quot; class=&quot;form-check-input&quot; value=&quot;&#123;&#123; $data-&gt;id &#125;&#125;&quot;&gt; &lt;/td&gt; &lt;td&gt;&#123;&#123; $data-&gt;title &#125;&#125;&lt;/td&gt; &lt;/tr&gt; @endforeach &lt;/tbody&gt; &lt;/table&gt; &lt;/div&gt;&lt;/div&gt;@endsection 新增路由（&#x2F;route&#x2F;web）","categories":[],"tags":[]},{"title":"Hello World","slug":"hello-world","date":"2024-05-27T08:03:00.000Z","updated":"2024-05-29T04:55:34.265Z","comments":true,"path":"2024/05/27/hello-world/","permalink":"http://appledog0113.github.io/2024/05/27/hello-world/","excerpt":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. > Quick StartCreate a new post1$ hexo new &quot;My New Post&quot; More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","categories":[],"tags":[]}],"categories":[],"tags":[]}